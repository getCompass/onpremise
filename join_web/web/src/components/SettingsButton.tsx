import {Box, HStack, VStack} from "../../styled-system/jsx";
import {css} from "../../styled-system/css";
import {Menu, MenuContent, MenuItem, MenuItemGroup, MenuPositioner, MenuTrigger} from "./menu.tsx";
import {Portal} from "@ark-ui/react";
import {useCallback, useMemo, useState} from "react";
import {Text} from "./text.tsx";
import {
	Dialog,
	DialogBackdrop,
	DialogCloseTrigger,
	DialogContainer,
	DialogContent,
	DialogTrigger,
	generateDialogId
} from "./dialog.tsx";
import {useLangString} from "../lib/getLangString.ts";
import {Button} from "./button.tsx";
import {NetworkError, ServerError} from "../api/_index.ts";
import {useApiAuthLogout} from "../api/auth.ts";
import {useToastConfig} from "../api/_stores.ts";
import Toast, {useShowToast} from "../lib/Toast.tsx";

// const getLangIcon = () => {
//
// 	const selectedLang = useAtomValue(langState);
//
// 	if (selectedLang === "ru") {
// 		return ruFlag20;
// 	}
//
// 	if (selectedLang === "en") {
// 		return enFlag20;
// 	}
//
// 	if (selectedLang === "de") {
// 		return deFlag20;
// 	}
//
// 	if (selectedLang === "fr") {
// 		return frFlag20;
// 	}
//
// 	if (selectedLang === "es") {
// 		return esFlag20;
// 	}
//
// 	if (selectedLang === "it") {
// 		return itFlag20;
// 	}
//
// 	return "";
// }

const LogOutIcon = () => {

	return (
		<Box
			w="22px"
			h="22px"
		>
			<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
				<path fillRule="evenodd" clipRule="evenodd"
					  d="M6.18758 1.8335C4.79536 1.8335 3.66675 2.96211 3.66675 4.35433V17.646C3.66675 19.0382 4.79536 20.1668 6.18758 20.1668H12.6042C13.9965 20.1668 15.1251 19.0382 15.1251 17.646V15.2397C15.1251 14.8601 14.8173 14.5522 14.4376 14.5522C14.0579 14.5522 13.7501 14.8601 13.7501 15.2397V17.646C13.7501 18.2788 13.2371 18.7918 12.6042 18.7918H6.18758C5.55476 18.7918 5.04175 18.2788 5.04175 17.646V4.35433C5.04175 3.7215 5.55476 3.2085 6.18758 3.2085H12.6042C13.2371 3.2085 13.7501 3.7215 13.7501 4.35433V6.76058C13.7501 7.14028 14.0579 7.44808 14.4376 7.44808C14.8173 7.44808 15.1251 7.14028 15.1251 6.76058V4.35433C15.1251 2.96211 13.9965 1.8335 12.6042 1.8335H6.18758ZM16.9306 8.22236C17.1991 7.95387 17.6344 7.95387 17.9029 8.22236L20.1946 10.514C20.3235 10.643 20.3959 10.8178 20.3959 11.0002C20.3959 11.1825 20.3235 11.3574 20.1946 11.4863L17.9029 13.778C17.6344 14.0465 17.1991 14.0465 16.9306 13.778C16.6621 13.5095 16.6621 13.0742 16.9306 12.8057L18.0486 11.6877H11.2292C10.8496 11.6877 10.5417 11.3799 10.5417 11.0002C10.5417 10.6205 10.8496 10.3127 11.2292 10.3127H18.0486L16.9306 9.19463C16.6621 8.92614 16.6621 8.49084 16.9306 8.22236Z"
					  fill="#B4B4B4"/>
			</svg>
		</Box>
	);
}

const SettingsButton = () => {

	const [isMenuOpen, setMenuOpen] = useState(false);
	// const langStringSettingsChangeLang = useLangString("settings.change_lang");
	const langStringSettingsLogout = useLangString("settings.logout");
	const langStringLogoutDialogTitle = useLangString("logout_dialog.title");
	const langStringLogoutDialogDesc = useLangString("logout_dialog.desc");
	const langStringLogoutDialogCancelButton = useLangString("logout_dialog.cancel_button");
	const langStringLogoutDialogConfirmButton = useLangString("logout_dialog.confirm_button");
	const langStringErrorsNetworkError = useLangString("errors.network_error");
	const langStringErrorsServerError = useLangString("errors.server_error");

	const dialogId = useMemo(() => generateDialogId(), []);
	const toastConfig = useToastConfig(dialogId);
	const showToast = useShowToast(dialogId);

	const apiAuthLogout = useApiAuthLogout();
	const onLogoutClickHandler = useCallback(async () => {

		try {
			await apiAuthLogout.mutateAsync();
		} catch (error) {

			if (error instanceof NetworkError) {

				showToast(langStringErrorsNetworkError, "warning");
				return;
			}

			if (error instanceof ServerError) {

				showToast(langStringErrorsServerError, "warning");
				return;
			}
		}
	}, [apiAuthLogout]);

	return (
		<Menu
			isOpen={isMenuOpen}
			onSelect={() => setMenuOpen(false)}
			onOpen={() => setMenuOpen(false)}
			onClose={() => setMenuOpen(false)}
			onFocusOutside={() => setMenuOpen(false)}
			onInteractOutside={() => setMenuOpen(false)}
			onPointerDownOutside={() => setMenuOpen(false)}
			positioning={{placement: "bottom", offset: {mainAxis: 10}}}
			type="screenBottom"
		>
			<MenuTrigger asChild>
				<Box
					bgColor="000000.005"
					p="6px"
					rounded="100%"
					className="group"
				>
					<Box
						className={css({
							w: "20px",
							h: "20px",
							outline: "none",
							userSelect: "none",
							WebkitTapHighlightColor: "transparent",
							opacity: "50%",
							_groupActive: {
								opacity: "90%",
							},
							["@media (groupHover: groupHover) and (pointer: fine)"]: {
								"&:groupHover": {
									opacity: "90%",
								}
							},
						})}
					>
						<svg width="20" height="20" viewBox="0 0 20 20" fill="none"
							 xmlns="http://www.w3.org/2000/svg">
							<g opacity="1">
								<path fillRule="evenodd" clipRule="evenodd"
									  d="M14.167 10C14.167 12.3012 12.3016 14.1667 10.0004 14.1667C7.69918 14.1667 5.8337 12.3012 5.8337 10C5.8337 7.69881 7.69918 5.83333 10.0004 5.83333C12.3016 5.83333 14.167 7.69881 14.167 10ZM12.917 10C12.917 11.6108 11.6112 12.9167 10.0004 12.9167C8.38954 12.9167 7.0837 11.6108 7.0837 10C7.0837 8.38917 8.38954 7.08333 10.0004 7.08333C11.6112 7.08333 12.917 8.38917 12.917 10Z"
									  fill="#DCDCDC"/>
								<path fillRule="evenodd" clipRule="evenodd"
									  d="M12.1672 1.66851C12.1936 1.66733 12.22 1.66675 12.2465 1.66675C12.4762 1.66664 12.7038 1.71182 12.916 1.79971L13.7048 2.12466C14.1133 2.29094 14.4442 2.60503 14.6316 3.00438C14.8189 3.40372 14.849 3.85901 14.7159 4.27956L14.6374 4.53146C14.9294 4.77876 15.2009 5.04925 15.4493 5.34027L15.7015 5.26062C15.8483 5.21427 16.0005 5.18734 16.1543 5.18052C16.1797 5.17942 16.2053 5.17886 16.2308 5.17886C16.4613 5.17892 16.6896 5.22402 16.9028 5.31164C17.1172 5.39909 17.3122 5.52829 17.4763 5.69173C17.6404 5.85518 17.7704 6.04962 17.8587 6.26375L18.187 7.05161C18.3584 7.45799 18.3705 7.91407 18.2208 8.32895C18.0711 8.74383 17.7706 9.08704 17.3791 9.29019L17.1454 9.41288C17.1766 9.79433 17.1773 10.1777 17.1475 10.5592L17.3824 10.6814C17.7745 10.8831 18.0762 11.2252 18.2273 11.6395C18.3785 12.0538 18.3681 12.5098 18.1982 12.9168L17.8738 13.7046C17.7454 14.0151 17.5313 14.2825 17.2565 14.4757C16.9816 14.6689 16.6575 14.7797 16.3219 14.7953C16.2959 14.7965 16.2698 14.797 16.2438 14.797C16.0662 14.7971 15.8896 14.7702 15.7201 14.7172L15.4673 14.6385C15.22 14.9304 14.9497 15.202 14.659 15.4507L14.7383 15.7028C14.8731 16.1227 14.8448 16.5781 14.6589 16.9781C14.473 17.3781 14.1432 17.6933 13.7353 17.8609L12.9484 18.1887C12.7579 18.2683 12.5547 18.3137 12.3484 18.3228C12.323 18.3239 12.2976 18.3245 12.2721 18.3245C11.9504 18.3247 11.6347 18.2369 11.3593 18.0706C11.0839 17.9042 10.8592 17.6656 10.7097 17.3807L10.587 17.147C10.4972 17.1544 10.4072 17.1601 10.3169 17.1642C10.2122 17.1688 10.1068 17.1711 10.0025 17.1711C9.81005 17.1711 9.62048 17.1633 9.4417 17.1479L9.31923 17.3837C9.17614 17.6579 8.96361 17.8898 8.70289 18.0561C8.44216 18.2225 8.14236 18.3175 7.83343 18.3317C7.80679 18.3328 7.78035 18.3334 7.75411 18.3334C7.52428 18.3335 7.29668 18.2883 7.0843 18.2004L6.29574 17.8754C5.88721 17.7094 5.55622 17.3955 5.36879 16.9962C5.18136 16.597 5.15125 16.1417 5.28447 15.7213L5.36318 15.4687C5.07127 15.2212 4.79963 14.9507 4.55083 14.6598L4.29882 14.7395C4.1521 14.7858 3.99996 14.8127 3.84626 14.8195C3.82088 14.8206 3.79525 14.8212 3.76962 14.8212C3.53912 14.821 3.31087 14.7759 3.09761 14.6884C2.88316 14.6008 2.68822 14.4715 2.52409 14.308C2.35997 14.1445 2.22991 13.9501 2.14145 13.7359L1.81358 12.9484C1.64213 12.5421 1.63005 12.086 1.77974 11.6711C1.92944 11.2563 2.22991 10.913 2.6213 10.7099L2.8554 10.5871C2.82379 10.2057 2.8231 9.82235 2.85333 9.44084L2.61902 9.31902C2.2268 9.11734 1.92493 8.77525 1.77355 8.36092C1.62217 7.94659 1.6324 7.49043 1.80219 7.0833L2.12722 6.29407C2.25584 5.98395 2.47003 5.71685 2.74475 5.52396C3.01948 5.33107 3.34341 5.22036 3.6787 5.20476C3.70495 5.20361 3.73098 5.20302 3.75701 5.20302C3.93476 5.20305 4.11148 5.23001 4.28116 5.28297L4.53337 5.3616C4.78066 5.06959 5.05103 4.79794 5.34186 4.54928L5.26233 4.29734C5.12753 3.8774 5.15588 3.42208 5.34171 3.02211C5.52755 2.62215 5.85724 2.30692 6.26506 2.13925L7.05281 1.81105C7.24321 1.73161 7.44611 1.68633 7.65221 1.67728C7.67764 1.67617 7.70285 1.67562 7.72828 1.67562C8.0499 1.67528 8.36548 1.76298 8.64083 1.92923C8.91618 2.09548 9.1408 2.33393 9.29035 2.61874L9.41336 2.85303C9.5032 2.84561 9.59318 2.8399 9.68328 2.83591C9.78843 2.83127 9.8938 2.82895 9.99854 2.82895C10.1907 2.82895 10.3801 2.83676 10.5589 2.85218L10.6814 2.61629C10.8245 2.34212 11.0371 2.11031 11.2978 1.944C11.5585 1.77769 11.8583 1.6827 12.1672 1.66851ZM12.4401 2.9555C12.3788 2.92981 12.313 2.91664 12.2465 2.91674L12.2224 2.91729C12.1327 2.92208 12.0458 2.94997 11.97 2.99826C11.8943 3.04656 11.8323 3.11361 11.79 3.19293L11.668 3.42818C11.5626 3.63127 11.4034 3.80151 11.2079 3.92036C11.0124 4.03922 10.7881 4.10212 10.5593 4.10222C10.5235 4.10222 10.4875 4.10069 10.4515 4.09758C10.3069 4.0851 10.1539 4.07896 9.99855 4.07896C9.91198 4.07896 9.82526 4.08087 9.73841 4.08471C9.66438 4.088 9.59034 4.0927 9.5163 4.09881C9.48174 4.10166 9.44737 4.10306 9.413 4.10306C9.18525 4.10301 8.96184 4.04068 8.76693 3.92283C8.57203 3.80497 8.41304 3.63607 8.30715 3.43437L8.18409 3.20007C8.12815 3.09375 8.03676 3.01038 7.92578 2.96442C7.86349 2.93867 7.79673 2.92547 7.72934 2.92558C7.66194 2.92569 7.59523 2.93912 7.53303 2.96508L6.74548 3.29317C6.62597 3.34082 6.5292 3.43238 6.47501 3.54909C6.42082 3.6658 6.41331 3.79883 6.45402 3.9209L6.53355 4.17293C6.60734 4.40687 6.61071 4.65737 6.54322 4.89321C6.47573 5.12906 6.34038 5.33984 6.15401 5.4993C5.91413 5.70428 5.69116 5.92828 5.48729 6.16913C5.32867 6.35663 5.11832 6.49323 4.88254 6.56185C4.64676 6.63047 4.39599 6.62807 4.16156 6.55496L3.90936 6.47633C3.86006 6.46083 3.80869 6.45297 3.75701 6.453C3.65584 6.45502 3.55737 6.48601 3.47327 6.54229C3.38917 6.59858 3.32296 6.67781 3.2825 6.77058L2.95767 7.55939C2.90686 7.67766 2.90316 7.81089 2.94732 7.93181C2.99148 8.05272 3.08017 8.15219 3.19524 8.20985L3.42975 8.33172C3.64764 8.44506 3.82733 8.6201 3.94637 8.83498C4.06542 9.04985 4.11855 9.29505 4.09913 9.53994C4.07414 9.85413 4.07469 10.1698 4.10075 10.4839C4.12104 10.7287 4.06877 10.974 3.95048 11.1892C3.83219 11.4045 3.65313 11.5801 3.43565 11.6941L3.20155 11.8169C3.08685 11.875 2.99868 11.9747 2.95509 12.0957C2.91149 12.2167 2.91576 12.3498 2.96703 12.4677L3.29513 13.2554C3.32054 13.3178 3.35823 13.3745 3.40596 13.4221C3.45368 13.4697 3.51048 13.5072 3.57297 13.5324C3.63546 13.5578 3.70221 13.5709 3.76964 13.5712C3.8217 13.5705 3.87341 13.5625 3.92321 13.5473L4.1742 13.4679C4.40803 13.3939 4.65847 13.3904 4.89428 13.4578C5.1301 13.5252 5.34087 13.6606 5.50032 13.8469C5.70573 14.0871 5.92998 14.3105 6.17092 14.5149C6.35824 14.6736 6.49468 14.884 6.56323 15.1197C6.63177 15.3555 6.62938 15.6062 6.55635 15.8407L6.47764 16.0932C6.43737 16.2155 6.44541 16.3485 6.50009 16.4649C6.55479 16.5814 6.65198 16.6725 6.77172 16.7196L7.56028 17.0446C7.62169 17.0702 7.68757 17.0834 7.75411 17.0833C7.84782 17.0817 7.93943 17.0553 8.01961 17.0068C8.09979 16.9582 8.16568 16.8893 8.21056 16.807L8.3328 16.5716C8.43823 16.3686 8.59734 16.1984 8.7928 16.0796C8.98826 15.9608 9.21257 15.8979 9.44129 15.8978C9.47709 15.8978 9.51289 15.8993 9.54888 15.9024C9.6935 15.9149 9.84686 15.921 10.0025 15.921C10.0885 15.921 10.1753 15.9191 10.2618 15.9153C10.3358 15.912 10.4105 15.9073 10.4849 15.9012C10.5191 15.8984 10.5534 15.897 10.5874 15.897C10.8152 15.8971 11.0386 15.9594 11.2336 16.0773C11.4285 16.1952 11.5875 16.3642 11.6934 16.5659L11.8161 16.7996C11.8722 16.9062 11.9639 16.9897 12.0752 17.0358C12.1374 17.0615 12.2041 17.0746 12.2715 17.0744C12.3388 17.0743 12.4054 17.0608 12.4676 17.0349L13.2549 16.7069C13.3745 16.6593 13.4713 16.5678 13.5255 16.4511C13.5798 16.3344 13.5873 16.2013 13.5466 16.0792L13.4668 15.8259C13.3933 15.5921 13.3901 15.3418 13.4577 15.1062C13.5252 14.8705 13.6605 14.66 13.8468 14.5007C14.0865 14.2955 14.3095 14.0715 14.5135 13.8308C14.6721 13.6434 14.8823 13.5069 15.1179 13.4383C15.3535 13.3697 15.6041 13.372 15.8384 13.4449L16.0912 13.5236C16.1406 13.5391 16.192 13.547 16.2438 13.547C16.345 13.545 16.4434 13.514 16.5275 13.4577C16.6116 13.4013 16.6777 13.322 16.7181 13.2292L17.0427 12.4407C17.0937 12.3224 17.0975 12.1891 17.0534 12.0682C17.0093 11.9472 16.9205 11.8477 16.8054 11.7902L16.571 11.6683C16.3533 11.5551 16.1738 11.3803 16.0548 11.1656C15.9357 10.951 15.8825 10.7061 15.9017 10.4614C15.9263 10.1463 15.9257 9.82972 15.8998 9.51468C15.8799 9.27019 15.9323 9.02524 16.0505 8.81033C16.1688 8.59542 16.3476 8.42004 16.5647 8.30605L16.7984 8.18336C16.9133 8.1253 17.0016 8.02551 17.0453 7.90444C17.089 7.78336 17.0847 7.65016 17.0334 7.53213L16.7053 6.74463C16.68 6.68209 16.6424 6.6253 16.5946 6.57769C16.5468 6.53008 16.4899 6.49262 16.4273 6.46757C16.3649 6.44214 16.2982 6.42899 16.2308 6.42885C16.1789 6.42952 16.1273 6.43756 16.0776 6.45272L15.8256 6.53228C15.5916 6.60623 15.341 6.60961 15.1051 6.54201C14.8692 6.4744 14.6584 6.3388 14.4991 6.15213C14.2944 5.91234 14.0706 5.68945 13.8301 5.48562C13.6427 5.32692 13.5061 5.1165 13.4375 4.88065C13.3689 4.6448 13.3712 4.39395 13.4443 4.15943L13.5228 3.90753C13.563 3.78522 13.5549 3.65218 13.5003 3.53561C13.4456 3.41904 13.3486 3.32775 13.2289 3.28041L12.4401 2.9555Z"
									  fill="#DCDCDC"/>
							</g>
						</svg>
					</Box>
				</Box>
			</MenuTrigger>
			<Portal>
				<MenuPositioner
					style={{
						position: "fixed",
						bottom: 0,
						left: 0,
						top: "auto",
						transform: "none",
						zIndex: "dropdown",
						width: "100%",
						userSelect: "none",
						outline: "none",
						WebkitTapHighlightColor: "transparent",
						// @ts-ignore
						"--x": "0px",
						"--y": "0px",
					}}
				>
					<MenuContent>
						<MenuItemGroup id="actions">
							{/*<MenuItem id="change_lang" asChild>*/}
							{/*	<LangMenuSelectorMobile*/}
							{/*		selectTrigger={*/}
							{/*			<SelectControl*/}
							{/*				w="100%"*/}
							{/*			>*/}
							{/*				<SelectTrigger*/}
							{/*					w="100%"*/}
							{/*				>*/}
							{/*					<HStack*/}
							{/*						pl="16px"*/}
							{/*						gap="12px"*/}
							{/*						w="100%"*/}
							{/*					>*/}
							{/*						<Box*/}
							{/*							w="20px"*/}
							{/*							h="20px"*/}
							{/*							bgSize="cover"*/}
							{/*							outline="none"*/}
							{/*							userSelect="none"*/}
							{/*							flexShrink="0"*/}
							{/*							style={{*/}
							{/*								backgroundImage: `url(${getLangIcon()})`*/}
							{/*							}}*/}
							{/*						/>*/}
							{/*						<Text*/}
							{/*							pr="16px"*/}
							{/*							w="100%"*/}
							{/*							fs="17"*/}
							{/*							lh="22"*/}
							{/*							color="333e49"*/}
							{/*							borderBottom="1px solid #f0f0f0"*/}
							{/*							py="16px"*/}
							{/*							textAlign="start"*/}
							{/*						>{langStringSettingsChangeLang}</Text>*/}
							{/*					</HStack>*/}
							{/*				</SelectTrigger>*/}
							{/*			</SelectControl>*/}
							{/*		}*/}
							{/*	/>*/}
							{/*</MenuItem>*/}
							<MenuItem id="logout" asChild>
								<Dialog
									backdrop="opacity50"
								>
									<DialogTrigger asChild>
										<HStack
											gap="12px"
											w="100%"
											pl="16px"
										>
											<LogOutIcon/>
											<Text
												pr="16px"
												w="100%"
												fs="17"
												lh="22"
												color="333e49"
												borderBottom="1px solid #f0f0f0"
												py="16px"
											>{langStringSettingsLogout}</Text>
										</HStack>
									</DialogTrigger>
									<Portal>
										<DialogBackdrop/>
										<DialogContainer>
											<DialogContent
												overflow="hidden"
												lazyMount
												unmountOnExit
											>
												<Toast toastConfig={toastConfig}/>
												<VStack
													mt="16px"
													gap="24px"
												>
													<VStack
														gap="16px"
													>
														<Box
															w="80px"
															h="80px"
														>
															<svg width="80" height="80" viewBox="0 0 80 80"
																 fill="none"
																 xmlns="http://www.w3.org/2000/svg">
																<path
																	d="M22.4999 6.6665C17.4373 6.6665 13.3333 10.7706 13.3333 15.8332V64.1665C13.3333 69.2291 17.4373 73.3332 22.4999 73.3332H45.8333C50.8959 73.3332 54.9999 69.2291 54.9999 64.1665V55.4165C54.9999 54.0358 53.8806 52.9165 52.4999 52.9165C51.1192 52.9165 49.9999 54.0358 49.9999 55.4165V64.1665C49.9999 66.4677 48.1344 68.3332 45.8333 68.3332H22.4999C20.1987 68.3332 18.3333 66.4677 18.3333 64.1665V15.8332C18.3333 13.532 20.1987 11.6665 22.4999 11.6665H45.8333C48.1344 11.6665 49.9999 13.532 49.9999 15.8332V24.5832C49.9999 25.9639 51.1192 27.0832 52.4999 27.0832C53.8806 27.0832 54.9999 25.9639 54.9999 24.5832V15.8332C54.9999 10.7706 50.8959 6.6665 45.8333 6.6665H22.4999Z"
																	fill="#B4B4B4"/>
																<path
																	d="M61.5655 29.8987C62.5418 28.9224 64.1247 28.9224 65.101 29.8987L73.4344 38.2321C73.9032 38.7009 74.1666 39.3368 74.1666 39.9999C74.1666 40.6629 73.9032 41.2988 73.4343 41.7676L65.101 50.1009C64.1247 51.0772 62.5418 51.0772 61.5655 50.1009C60.5892 49.1246 60.5892 47.5417 61.5655 46.5654L65.631 42.4999H40.8333C39.4525 42.4999 38.3333 41.3806 38.3333 39.9999C38.3333 38.6192 39.4525 37.4999 40.8333 37.4999H65.6311L61.5655 33.4343C60.5892 32.458 60.5892 30.875 61.5655 29.8987Z"
																	fill="#B4B4B4"/>
															</svg>
														</Box>
														<VStack
															gap="4px"
														>
															<Text
																font="bold"
																ls="-03"
																fs="20"
																lh="28"
																color="333e49"
															>{langStringLogoutDialogTitle}</Text>
															<Text
																fs="16"
																lh="22"
																color="333e49"
																textAlign="center"
															>{langStringLogoutDialogDesc}</Text>
														</VStack>
													</VStack>
													<HStack
														w="100%"
														justify="space-between"
													>
														<DialogCloseTrigger asChild>
															<Button
																color="f5f5f5"
																size="px16py9"
															>{langStringLogoutDialogCancelButton}</Button>
														</DialogCloseTrigger>
														<Button
															color="ff6a64"
															size="px16py9"
															onClick={() => onLogoutClickHandler()}
														>{langStringLogoutDialogConfirmButton}</Button>
													</HStack>
												</VStack>
											</DialogContent>
										</DialogContainer>
									</Portal>
								</Dialog>
							</MenuItem>
						</MenuItemGroup>
					</MenuContent>
				</MenuPositioner>
			</Portal>
		</Menu>
	);
}

export default SettingsButton;