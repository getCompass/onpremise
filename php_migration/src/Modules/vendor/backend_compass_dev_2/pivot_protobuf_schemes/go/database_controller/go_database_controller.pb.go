// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.1
// source: proto/go_database_controller.proto

package database_controller

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NullRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NullRequestStruct) Reset() {
	*x = NullRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullRequestStruct) ProtoMessage() {}

func (x *NullRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullRequestStruct.ProtoReflect.Descriptor instead.
func (*NullRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{0}
}

type NullResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NullResponseStruct) Reset() {
	*x = NullResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullResponseStruct) ProtoMessage() {}

func (x *NullResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullResponseStruct.ProtoReflect.Descriptor instead.
func (*NullResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{1}
}

type GetStatusRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *GetStatusRequestStruct) Reset() {
	*x = GetStatusRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequestStruct) ProtoMessage() {}

func (x *GetStatusRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequestStruct.ProtoReflect.Descriptor instead.
func (*GetStatusRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{2}
}

func (x *GetStatusRequestStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetStatusRequestStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type GetStatusResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetStatusResponseStruct) Reset() {
	*x = GetStatusResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponseStruct) ProtoMessage() {}

func (x *GetStatusResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponseStruct.ProtoReflect.Descriptor instead.
func (*GetStatusResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{3}
}

func (x *GetStatusResponseStruct) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetStatusResponseStruct) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCompanyPortRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetCompanyPortRequestStruct) Reset() {
	*x = GetCompanyPortRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyPortRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyPortRequestStruct) ProtoMessage() {}

func (x *GetCompanyPortRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyPortRequestStruct.ProtoReflect.Descriptor instead.
func (*GetCompanyPortRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{4}
}

func (x *GetCompanyPortRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type GetCompanyPortResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port      int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host      string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	MysqlUser string `protobuf:"bytes,3,opt,name=mysql_user,json=mysqlUser,proto3" json:"mysql_user,omitempty"`
	MysqlPass string `protobuf:"bytes,4,opt,name=mysql_pass,json=mysqlPass,proto3" json:"mysql_pass,omitempty"`
}

func (x *GetCompanyPortResponseStruct) Reset() {
	*x = GetCompanyPortResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyPortResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyPortResponseStruct) ProtoMessage() {}

func (x *GetCompanyPortResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyPortResponseStruct.ProtoReflect.Descriptor instead.
func (*GetCompanyPortResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{5}
}

func (x *GetCompanyPortResponseStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetCompanyPortResponseStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetCompanyPortResponseStruct) GetMysqlUser() string {
	if x != nil {
		return x.MysqlUser
	}
	return ""
}

func (x *GetCompanyPortResponseStruct) GetMysqlPass() string {
	if x != nil {
		return x.MysqlPass
	}
	return ""
}

type BindOnServicePortRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *BindOnServicePortRequestStruct) Reset() {
	*x = BindOnServicePortRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindOnServicePortRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindOnServicePortRequestStruct) ProtoMessage() {}

func (x *BindOnServicePortRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindOnServicePortRequestStruct.ProtoReflect.Descriptor instead.
func (*BindOnServicePortRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{6}
}

func (x *BindOnServicePortRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type BindOnServicePortResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port      int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host      string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	MysqlUser string `protobuf:"bytes,3,opt,name=mysql_user,json=mysqlUser,proto3" json:"mysql_user,omitempty"`
	MysqlPass string `protobuf:"bytes,4,opt,name=mysql_pass,json=mysqlPass,proto3" json:"mysql_pass,omitempty"`
}

func (x *BindOnServicePortResponseStruct) Reset() {
	*x = BindOnServicePortResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindOnServicePortResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindOnServicePortResponseStruct) ProtoMessage() {}

func (x *BindOnServicePortResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindOnServicePortResponseStruct.ProtoReflect.Descriptor instead.
func (*BindOnServicePortResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{7}
}

func (x *BindOnServicePortResponseStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *BindOnServicePortResponseStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *BindOnServicePortResponseStruct) GetMysqlUser() string {
	if x != nil {
		return x.MysqlUser
	}
	return ""
}

func (x *BindOnServicePortResponseStruct) GetMysqlPass() string {
	if x != nil {
		return x.MysqlPass
	}
	return ""
}

type BeginDataCopyingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId  int64  `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	TargetHost string `protobuf:"bytes,3,opt,name=target_host,json=targetHost,proto3" json:"target_host,omitempty"`
}

func (x *BeginDataCopyingRequestStruct) Reset() {
	*x = BeginDataCopyingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginDataCopyingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginDataCopyingRequestStruct) ProtoMessage() {}

func (x *BeginDataCopyingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginDataCopyingRequestStruct.ProtoReflect.Descriptor instead.
func (*BeginDataCopyingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{8}
}

func (x *BeginDataCopyingRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *BeginDataCopyingRequestStruct) GetTargetHost() string {
	if x != nil {
		return x.TargetHost
	}
	return ""
}

type BeginDataCopyingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutineKey string                    `protobuf:"bytes,1,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	Routine    *GetRoutineStatusResponse `protobuf:"bytes,2,opt,name=routine,proto3" json:"routine,omitempty"`
}

func (x *BeginDataCopyingResponseStruct) Reset() {
	*x = BeginDataCopyingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginDataCopyingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginDataCopyingResponseStruct) ProtoMessage() {}

func (x *BeginDataCopyingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginDataCopyingResponseStruct.ProtoReflect.Descriptor instead.
func (*BeginDataCopyingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{9}
}

func (x *BeginDataCopyingResponseStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *BeginDataCopyingResponseStruct) GetRoutine() *GetRoutineStatusResponse {
	if x != nil {
		return x.Routine
	}
	return nil
}

type BeginDataApplyingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *BeginDataApplyingRequestStruct) Reset() {
	*x = BeginDataApplyingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginDataApplyingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginDataApplyingRequestStruct) ProtoMessage() {}

func (x *BeginDataApplyingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginDataApplyingRequestStruct.ProtoReflect.Descriptor instead.
func (*BeginDataApplyingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{10}
}

func (x *BeginDataApplyingRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type BeginDataApplyingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutineKey string                    `protobuf:"bytes,1,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	Routine    *GetRoutineStatusResponse `protobuf:"bytes,2,opt,name=routine,proto3" json:"routine,omitempty"`
}

func (x *BeginDataApplyingResponseStruct) Reset() {
	*x = BeginDataApplyingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginDataApplyingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginDataApplyingResponseStruct) ProtoMessage() {}

func (x *BeginDataApplyingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginDataApplyingResponseStruct.ProtoReflect.Descriptor instead.
func (*BeginDataApplyingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{11}
}

func (x *BeginDataApplyingResponseStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *BeginDataApplyingResponseStruct) GetRoutine() *GetRoutineStatusResponse {
	if x != nil {
		return x.Routine
	}
	return nil
}

type GetRoutineStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutineKey string `protobuf:"bytes,1,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
}

func (x *GetRoutineStatusRequest) Reset() {
	*x = GetRoutineStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutineStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutineStatusRequest) ProtoMessage() {}

func (x *GetRoutineStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutineStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRoutineStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoutineStatusRequest) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

type GetRoutineStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Log     string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *GetRoutineStatusResponse) Reset() {
	*x = GetRoutineStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutineStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutineStatusResponse) ProtoMessage() {}

func (x *GetRoutineStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutineStatusResponse.ProtoReflect.Descriptor instead.
func (*GetRoutineStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoutineStatusResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetRoutineStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRoutineStatusResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type GenerateMysqlConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateMysqlConfigRequest) Reset() {
	*x = GenerateMysqlConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMysqlConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMysqlConfigRequest) ProtoMessage() {}

func (x *GenerateMysqlConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMysqlConfigRequest.ProtoReflect.Descriptor instead.
func (*GenerateMysqlConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{14}
}

type GenerateMysqlConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateMysqlConfigResponse) Reset() {
	*x = GenerateMysqlConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMysqlConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMysqlConfigResponse) ProtoMessage() {}

func (x *GenerateMysqlConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMysqlConfigResponse.ProtoReflect.Descriptor instead.
func (*GenerateMysqlConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{15}
}

type BindPortRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port                     int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host                     string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	CompanyId                int64  `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DuplicateDataDirPolicy   int32  `protobuf:"varint,5,opt,name=duplicate_data_dir_policy,json=duplicateDataDirPolicy,proto3" json:"duplicate_data_dir_policy,omitempty"`
	NonExistingDataDirPolicy int32  `protobuf:"varint,6,opt,name=non_existing_data_dir_policy,json=nonExistingDataDirPolicy,proto3" json:"non_existing_data_dir_policy,omitempty"`
}

func (x *BindPortRequestStruct) Reset() {
	*x = BindPortRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPortRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPortRequestStruct) ProtoMessage() {}

func (x *BindPortRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPortRequestStruct.ProtoReflect.Descriptor instead.
func (*BindPortRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{16}
}

func (x *BindPortRequestStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *BindPortRequestStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *BindPortRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *BindPortRequestStruct) GetDuplicateDataDirPolicy() int32 {
	if x != nil {
		return x.DuplicateDataDirPolicy
	}
	return 0
}

func (x *BindPortRequestStruct) GetNonExistingDataDirPolicy() int32 {
	if x != nil {
		return x.NonExistingDataDirPolicy
	}
	return 0
}

type BindPortResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutineKey string                    `protobuf:"bytes,1,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	Routine    *GetRoutineStatusResponse `protobuf:"bytes,2,opt,name=routine,proto3" json:"routine,omitempty"`
}

func (x *BindPortResponseStruct) Reset() {
	*x = BindPortResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindPortResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindPortResponseStruct) ProtoMessage() {}

func (x *BindPortResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindPortResponseStruct.ProtoReflect.Descriptor instead.
func (*BindPortResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{17}
}

func (x *BindPortResponseStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *BindPortResponseStruct) GetRoutine() *GetRoutineStatusResponse {
	if x != nil {
		return x.Routine
	}
	return nil
}

type UnbindPortRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *UnbindPortRequestStruct) Reset() {
	*x = UnbindPortRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindPortRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindPortRequestStruct) ProtoMessage() {}

func (x *UnbindPortRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindPortRequestStruct.ProtoReflect.Descriptor instead.
func (*UnbindPortRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{18}
}

func (x *UnbindPortRequestStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UnbindPortRequestStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type AddPortRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port              int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host              string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Status            int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Type              int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	LockedTill        int32  `protobuf:"varint,5,opt,name=locked_till,json=lockedTill,proto3" json:"locked_till,omitempty"`
	CreatedAt         int32  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         int32  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CompanyId         int64  `protobuf:"varint,8,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Extra             string `protobuf:"bytes,9,opt,name=extra,proto3" json:"extra,omitempty"`
	LockedByCompanyId int64  `protobuf:"varint,10,opt,name=locked_by_company_id,json=lockedByCompanyId,proto3" json:"locked_by_company_id,omitempty"`
}

func (x *AddPortRequestStruct) Reset() {
	*x = AddPortRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortRequestStruct) ProtoMessage() {}

func (x *AddPortRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortRequestStruct.ProtoReflect.Descriptor instead.
func (*AddPortRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{19}
}

func (x *AddPortRequestStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AddPortRequestStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AddPortRequestStruct) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddPortRequestStruct) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddPortRequestStruct) GetLockedTill() int32 {
	if x != nil {
		return x.LockedTill
	}
	return 0
}

func (x *AddPortRequestStruct) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddPortRequestStruct) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddPortRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *AddPortRequestStruct) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *AddPortRequestStruct) GetLockedByCompanyId() int64 {
	if x != nil {
		return x.LockedByCompanyId
	}
	return 0
}

type CreateMysqlBackupRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
}

func (x *CreateMysqlBackupRequestStruct) Reset() {
	*x = CreateMysqlBackupRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMysqlBackupRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMysqlBackupRequestStruct) ProtoMessage() {}

func (x *CreateMysqlBackupRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMysqlBackupRequestStruct.ProtoReflect.Descriptor instead.
func (*CreateMysqlBackupRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{20}
}

func (x *CreateMysqlBackupRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type CreateMysqlBackupResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupName string                    `protobuf:"bytes,1,opt,name=backup_name,json=backupName,proto3" json:"backup_name,omitempty"`
	RoutineKey string                    `protobuf:"bytes,2,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	Routine    *GetRoutineStatusResponse `protobuf:"bytes,3,opt,name=routine,proto3" json:"routine,omitempty"`
}

func (x *CreateMysqlBackupResponseStruct) Reset() {
	*x = CreateMysqlBackupResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMysqlBackupResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMysqlBackupResponseStruct) ProtoMessage() {}

func (x *CreateMysqlBackupResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMysqlBackupResponseStruct.ProtoReflect.Descriptor instead.
func (*CreateMysqlBackupResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{21}
}

func (x *CreateMysqlBackupResponseStruct) GetBackupName() string {
	if x != nil {
		return x.BackupName
	}
	return ""
}

func (x *CreateMysqlBackupResponseStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *CreateMysqlBackupResponseStruct) GetRoutine() *GetRoutineStatusResponse {
	if x != nil {
		return x.Routine
	}
	return nil
}

type MigrateRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *MigrateRequestStruct) Reset() {
	*x = MigrateRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateRequestStruct) ProtoMessage() {}

func (x *MigrateRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateRequestStruct.ProtoReflect.Descriptor instead.
func (*MigrateRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{22}
}

func (x *MigrateRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type MigrateResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutineKey string                    `protobuf:"bytes,1,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	Routine    *GetRoutineStatusResponse `protobuf:"bytes,2,opt,name=routine,proto3" json:"routine,omitempty"`
}

func (x *MigrateResponseStruct) Reset() {
	*x = MigrateResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateResponseStruct) ProtoMessage() {}

func (x *MigrateResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateResponseStruct.ProtoReflect.Descriptor instead.
func (*MigrateResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{23}
}

func (x *MigrateResponseStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *MigrateResponseStruct) GetRoutine() *GetRoutineStatusResponse {
	if x != nil {
		return x.Routine
	}
	return nil
}

type SetPortInvalidRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *SetPortInvalidRequestStruct) Reset() {
	*x = SetPortInvalidRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPortInvalidRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPortInvalidRequestStruct) ProtoMessage() {}

func (x *SetPortInvalidRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPortInvalidRequestStruct.ProtoReflect.Descriptor instead.
func (*SetPortInvalidRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{24}
}

func (x *SetPortInvalidRequestStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SetPortInvalidRequestStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type SyncPortStatusRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port              int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host              string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Status            int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	LockedTill        int32  `protobuf:"varint,4,opt,name=locked_till,json=lockedTill,proto3" json:"locked_till,omitempty"`
	CompanyId         int64  `protobuf:"varint,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	LockedByCompanyId int64  `protobuf:"varint,6,opt,name=locked_by_company_id,json=lockedByCompanyId,proto3" json:"locked_by_company_id,omitempty"`
}

func (x *SyncPortStatusRequestStruct) Reset() {
	*x = SyncPortStatusRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPortStatusRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPortStatusRequestStruct) ProtoMessage() {}

func (x *SyncPortStatusRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPortStatusRequestStruct.ProtoReflect.Descriptor instead.
func (*SyncPortStatusRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{25}
}

func (x *SyncPortStatusRequestStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SyncPortStatusRequestStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SyncPortStatusRequestStruct) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SyncPortStatusRequestStruct) GetLockedTill() int32 {
	if x != nil {
		return x.LockedTill
	}
	return 0
}

func (x *SyncPortStatusRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *SyncPortStatusRequestStruct) GetLockedByCompanyId() int64 {
	if x != nil {
		return x.LockedByCompanyId
	}
	return 0
}

type SyncPortStatusResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SyncPortStatusResponseStruct) Reset() {
	*x = SyncPortStatusResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPortStatusResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPortStatusResponseStruct) ProtoMessage() {}

func (x *SyncPortStatusResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPortStatusResponseStruct.ProtoReflect.Descriptor instead.
func (*SyncPortStatusResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{26}
}

func (x *SyncPortStatusResponseStruct) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SyncPortStatusResponseStruct) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResetPortRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *ResetPortRequestStruct) Reset() {
	*x = ResetPortRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPortRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPortRequestStruct) ProtoMessage() {}

func (x *ResetPortRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPortRequestStruct.ProtoReflect.Descriptor instead.
func (*ResetPortRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{27}
}

func (x *ResetPortRequestStruct) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ResetPortRequestStruct) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type PrepareCompanyDataDirRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId              int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DuplicateDataDirPolicy int32 `protobuf:"varint,2,opt,name=duplicate_data_dir_policy,json=duplicateDataDirPolicy,proto3" json:"duplicate_data_dir_policy,omitempty"`
}

func (x *PrepareCompanyDataDirRequestStruct) Reset() {
	*x = PrepareCompanyDataDirRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareCompanyDataDirRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareCompanyDataDirRequestStruct) ProtoMessage() {}

func (x *PrepareCompanyDataDirRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareCompanyDataDirRequestStruct.ProtoReflect.Descriptor instead.
func (*PrepareCompanyDataDirRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{28}
}

func (x *PrepareCompanyDataDirRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *PrepareCompanyDataDirRequestStruct) GetDuplicateDataDirPolicy() int32 {
	if x != nil {
		return x.DuplicateDataDirPolicy
	}
	return 0
}

type InitSearchRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *InitSearchRequestStruct) Reset() {
	*x = InitSearchRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitSearchRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSearchRequestStruct) ProtoMessage() {}

func (x *InitSearchRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSearchRequestStruct.ProtoReflect.Descriptor instead.
func (*InitSearchRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{29}
}

func (x *InitSearchRequestStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

type DropSearchTableRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *DropSearchTableRequestStruct) Reset() {
	*x = DropSearchTableRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_database_controller_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropSearchTableRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropSearchTableRequestStruct) ProtoMessage() {}

func (x *DropSearchTableRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_database_controller_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropSearchTableRequestStruct.ProtoReflect.Descriptor instead.
func (*DropSearchTableRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_database_controller_proto_rawDescGZIP(), []int{30}
}

func (x *DropSearchTableRequestStruct) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

var File_proto_go_database_controller_proto protoreflect.FileDescriptor

var file_proto_go_database_controller_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x22, 0x13, 0x0a, 0x11,
	0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x14, 0x0a, 0x12, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x40, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x22, 0x3f, 0x0a, 0x1e, 0x42,
	0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a,
	0x1f, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x79, 0x73, 0x71,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x79, 0x73, 0x71, 0x6c,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x79, 0x73,
	0x71, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x22, 0x5f, 0x0a, 0x1d, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x70, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x1e, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x70, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x07, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x22, 0x3f, 0x0a, 0x1e, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x1f, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a,
	0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x22, 0x3a, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3e,
	0x0a, 0x1c, 0x6e, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6e, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x85,
	0x01, 0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x07, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x22, 0x41, 0x0a, 0x17, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x2f, 0x0a, 0x14, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x1e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x4a, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x22, 0x35, 0x0a,
	0x14, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x4a, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x22, 0x45, 0x0a, 0x1b, 0x53,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6c,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x54,
	0x69, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1c, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x40, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x22, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19,
	0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64,
	0x69, 0x72, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x16, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69,
	0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x34, 0x0a, 0x17, 0x49, 0x6e, 0x69, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x39, 0x0a,
	0x1c, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x32, 0xec, 0x12, 0x0a, 0x12, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x6e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2f, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12,
	0x7d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x33, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x34, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x86,
	0x01, 0x0a, 0x11, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x36, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x37, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x70, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x70, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x1a, 0x36, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x70, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x86, 0x01,
	0x0a, 0x11, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x69, 0x6e, 0x67, 0x12, 0x36, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x37, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x80, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x73, 0x71,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x73,
	0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6b, 0x0a, 0x08, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2d,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x0a, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4e,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79,
	0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x36, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x37, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x33,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x33, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x09, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x12, 0x2c,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2d, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x73, 0x0a,
	0x12, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x12, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x2d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x3a, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4e,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x0f, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x44, 0x72, 0x6f, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_go_database_controller_proto_rawDescOnce sync.Once
	file_proto_go_database_controller_proto_rawDescData = file_proto_go_database_controller_proto_rawDesc
)

func file_proto_go_database_controller_proto_rawDescGZIP() []byte {
	file_proto_go_database_controller_proto_rawDescOnce.Do(func() {
		file_proto_go_database_controller_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_go_database_controller_proto_rawDescData)
	})
	return file_proto_go_database_controller_proto_rawDescData
}

var file_proto_go_database_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_go_database_controller_proto_goTypes = []interface{}{
	(*NullRequestStruct)(nil),                  // 0: databaseControllerGrpc.NullRequestStruct
	(*NullResponseStruct)(nil),                 // 1: databaseControllerGrpc.NullResponseStruct
	(*GetStatusRequestStruct)(nil),             // 2: databaseControllerGrpc.GetStatusRequestStruct
	(*GetStatusResponseStruct)(nil),            // 3: databaseControllerGrpc.GetStatusResponseStruct
	(*GetCompanyPortRequestStruct)(nil),        // 4: databaseControllerGrpc.GetCompanyPortRequestStruct
	(*GetCompanyPortResponseStruct)(nil),       // 5: databaseControllerGrpc.GetCompanyPortResponseStruct
	(*BindOnServicePortRequestStruct)(nil),     // 6: databaseControllerGrpc.BindOnServicePortRequestStruct
	(*BindOnServicePortResponseStruct)(nil),    // 7: databaseControllerGrpc.BindOnServicePortResponseStruct
	(*BeginDataCopyingRequestStruct)(nil),      // 8: databaseControllerGrpc.BeginDataCopyingRequestStruct
	(*BeginDataCopyingResponseStruct)(nil),     // 9: databaseControllerGrpc.BeginDataCopyingResponseStruct
	(*BeginDataApplyingRequestStruct)(nil),     // 10: databaseControllerGrpc.BeginDataApplyingRequestStruct
	(*BeginDataApplyingResponseStruct)(nil),    // 11: databaseControllerGrpc.BeginDataApplyingResponseStruct
	(*GetRoutineStatusRequest)(nil),            // 12: databaseControllerGrpc.GetRoutineStatusRequest
	(*GetRoutineStatusResponse)(nil),           // 13: databaseControllerGrpc.GetRoutineStatusResponse
	(*GenerateMysqlConfigRequest)(nil),         // 14: databaseControllerGrpc.GenerateMysqlConfigRequest
	(*GenerateMysqlConfigResponse)(nil),        // 15: databaseControllerGrpc.GenerateMysqlConfigResponse
	(*BindPortRequestStruct)(nil),              // 16: databaseControllerGrpc.BindPortRequestStruct
	(*BindPortResponseStruct)(nil),             // 17: databaseControllerGrpc.BindPortResponseStruct
	(*UnbindPortRequestStruct)(nil),            // 18: databaseControllerGrpc.UnbindPortRequestStruct
	(*AddPortRequestStruct)(nil),               // 19: databaseControllerGrpc.AddPortRequestStruct
	(*CreateMysqlBackupRequestStruct)(nil),     // 20: databaseControllerGrpc.CreateMysqlBackupRequestStruct
	(*CreateMysqlBackupResponseStruct)(nil),    // 21: databaseControllerGrpc.CreateMysqlBackupResponseStruct
	(*MigrateRequestStruct)(nil),               // 22: databaseControllerGrpc.MigrateRequestStruct
	(*MigrateResponseStruct)(nil),              // 23: databaseControllerGrpc.MigrateResponseStruct
	(*SetPortInvalidRequestStruct)(nil),        // 24: databaseControllerGrpc.SetPortInvalidRequestStruct
	(*SyncPortStatusRequestStruct)(nil),        // 25: databaseControllerGrpc.SyncPortStatusRequestStruct
	(*SyncPortStatusResponseStruct)(nil),       // 26: databaseControllerGrpc.SyncPortStatusResponseStruct
	(*ResetPortRequestStruct)(nil),             // 27: databaseControllerGrpc.ResetPortRequestStruct
	(*PrepareCompanyDataDirRequestStruct)(nil), // 28: databaseControllerGrpc.PrepareCompanyDataDirRequestStruct
	(*InitSearchRequestStruct)(nil),            // 29: databaseControllerGrpc.InitSearchRequestStruct
	(*DropSearchTableRequestStruct)(nil),       // 30: databaseControllerGrpc.DropSearchTableRequestStruct
}
var file_proto_go_database_controller_proto_depIdxs = []int32{
	13, // 0: databaseControllerGrpc.BeginDataCopyingResponseStruct.routine:type_name -> databaseControllerGrpc.GetRoutineStatusResponse
	13, // 1: databaseControllerGrpc.BeginDataApplyingResponseStruct.routine:type_name -> databaseControllerGrpc.GetRoutineStatusResponse
	13, // 2: databaseControllerGrpc.BindPortResponseStruct.routine:type_name -> databaseControllerGrpc.GetRoutineStatusResponse
	13, // 3: databaseControllerGrpc.CreateMysqlBackupResponseStruct.routine:type_name -> databaseControllerGrpc.GetRoutineStatusResponse
	13, // 4: databaseControllerGrpc.MigrateResponseStruct.routine:type_name -> databaseControllerGrpc.GetRoutineStatusResponse
	2,  // 5: databaseControllerGrpc.databaseController.GetStatus:input_type -> databaseControllerGrpc.GetStatusRequestStruct
	4,  // 6: databaseControllerGrpc.databaseController.GetCompanyPort:input_type -> databaseControllerGrpc.GetCompanyPortRequestStruct
	6,  // 7: databaseControllerGrpc.databaseController.BindOnServicePort:input_type -> databaseControllerGrpc.BindOnServicePortRequestStruct
	8,  // 8: databaseControllerGrpc.databaseController.BeginDataCopying:input_type -> databaseControllerGrpc.BeginDataCopyingRequestStruct
	10, // 9: databaseControllerGrpc.databaseController.BeginDataApplying:input_type -> databaseControllerGrpc.BeginDataApplyingRequestStruct
	12, // 10: databaseControllerGrpc.databaseController.GetRoutineStatus:input_type -> databaseControllerGrpc.GetRoutineStatusRequest
	14, // 11: databaseControllerGrpc.databaseController.GenerateMysqlConfig:input_type -> databaseControllerGrpc.GenerateMysqlConfigRequest
	16, // 12: databaseControllerGrpc.databaseController.BindPort:input_type -> databaseControllerGrpc.BindPortRequestStruct
	18, // 13: databaseControllerGrpc.databaseController.UnbindPort:input_type -> databaseControllerGrpc.UnbindPortRequestStruct
	19, // 14: databaseControllerGrpc.databaseController.AddPort:input_type -> databaseControllerGrpc.AddPortRequestStruct
	20, // 15: databaseControllerGrpc.databaseController.CreateMysqlBackup:input_type -> databaseControllerGrpc.CreateMysqlBackupRequestStruct
	24, // 16: databaseControllerGrpc.databaseController.SetPortInvalid:input_type -> databaseControllerGrpc.SetPortInvalidRequestStruct
	25, // 17: databaseControllerGrpc.databaseController.SyncPortStatus:input_type -> databaseControllerGrpc.SyncPortStatusRequestStruct
	27, // 18: databaseControllerGrpc.databaseController.ResetPort:input_type -> databaseControllerGrpc.ResetPortRequestStruct
	22, // 19: databaseControllerGrpc.databaseController.MigrateUp:input_type -> databaseControllerGrpc.MigrateRequestStruct
	22, // 20: databaseControllerGrpc.databaseController.MigrateLegacyClean:input_type -> databaseControllerGrpc.MigrateRequestStruct
	28, // 21: databaseControllerGrpc.databaseController.PrepareCompanyDataDir:input_type -> databaseControllerGrpc.PrepareCompanyDataDirRequestStruct
	29, // 22: databaseControllerGrpc.databaseController.InitSearch:input_type -> databaseControllerGrpc.InitSearchRequestStruct
	30, // 23: databaseControllerGrpc.databaseController.DropSearchTable:input_type -> databaseControllerGrpc.DropSearchTableRequestStruct
	0,  // 24: databaseControllerGrpc.databaseController.UpdateDeployment:input_type -> databaseControllerGrpc.NullRequestStruct
	3,  // 25: databaseControllerGrpc.databaseController.GetStatus:output_type -> databaseControllerGrpc.GetStatusResponseStruct
	5,  // 26: databaseControllerGrpc.databaseController.GetCompanyPort:output_type -> databaseControllerGrpc.GetCompanyPortResponseStruct
	7,  // 27: databaseControllerGrpc.databaseController.BindOnServicePort:output_type -> databaseControllerGrpc.BindOnServicePortResponseStruct
	9,  // 28: databaseControllerGrpc.databaseController.BeginDataCopying:output_type -> databaseControllerGrpc.BeginDataCopyingResponseStruct
	11, // 29: databaseControllerGrpc.databaseController.BeginDataApplying:output_type -> databaseControllerGrpc.BeginDataApplyingResponseStruct
	13, // 30: databaseControllerGrpc.databaseController.GetRoutineStatus:output_type -> databaseControllerGrpc.GetRoutineStatusResponse
	15, // 31: databaseControllerGrpc.databaseController.GenerateMysqlConfig:output_type -> databaseControllerGrpc.GenerateMysqlConfigResponse
	17, // 32: databaseControllerGrpc.databaseController.BindPort:output_type -> databaseControllerGrpc.BindPortResponseStruct
	1,  // 33: databaseControllerGrpc.databaseController.UnbindPort:output_type -> databaseControllerGrpc.NullResponseStruct
	1,  // 34: databaseControllerGrpc.databaseController.AddPort:output_type -> databaseControllerGrpc.NullResponseStruct
	21, // 35: databaseControllerGrpc.databaseController.CreateMysqlBackup:output_type -> databaseControllerGrpc.CreateMysqlBackupResponseStruct
	1,  // 36: databaseControllerGrpc.databaseController.SetPortInvalid:output_type -> databaseControllerGrpc.NullResponseStruct
	1,  // 37: databaseControllerGrpc.databaseController.SyncPortStatus:output_type -> databaseControllerGrpc.NullResponseStruct
	1,  // 38: databaseControllerGrpc.databaseController.ResetPort:output_type -> databaseControllerGrpc.NullResponseStruct
	23, // 39: databaseControllerGrpc.databaseController.MigrateUp:output_type -> databaseControllerGrpc.MigrateResponseStruct
	23, // 40: databaseControllerGrpc.databaseController.MigrateLegacyClean:output_type -> databaseControllerGrpc.MigrateResponseStruct
	1,  // 41: databaseControllerGrpc.databaseController.PrepareCompanyDataDir:output_type -> databaseControllerGrpc.NullResponseStruct
	1,  // 42: databaseControllerGrpc.databaseController.InitSearch:output_type -> databaseControllerGrpc.NullResponseStruct
	1,  // 43: databaseControllerGrpc.databaseController.DropSearchTable:output_type -> databaseControllerGrpc.NullResponseStruct
	1,  // 44: databaseControllerGrpc.databaseController.UpdateDeployment:output_type -> databaseControllerGrpc.NullResponseStruct
	25, // [25:45] is the sub-list for method output_type
	5,  // [5:25] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_go_database_controller_proto_init() }
func file_proto_go_database_controller_proto_init() {
	if File_proto_go_database_controller_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_go_database_controller_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyPortRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyPortResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindOnServicePortRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindOnServicePortResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginDataCopyingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginDataCopyingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginDataApplyingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginDataApplyingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutineStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutineStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMysqlConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMysqlConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPortRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindPortResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindPortRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPortRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMysqlBackupRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMysqlBackupResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPortInvalidRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPortStatusRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPortStatusResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPortRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareCompanyDataDirRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitSearchRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_database_controller_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropSearchTableRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_go_database_controller_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_go_database_controller_proto_goTypes,
		DependencyIndexes: file_proto_go_database_controller_proto_depIdxs,
		MessageInfos:      file_proto_go_database_controller_proto_msgTypes,
	}.Build()
	File_proto_go_database_controller_proto = out.File
	file_proto_go_database_controller_proto_rawDesc = nil
	file_proto_go_database_controller_proto_goTypes = nil
	file_proto_go_database_controller_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DatabaseControllerClient is the client API for DatabaseController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatabaseControllerClient interface {
	GetStatus(ctx context.Context, in *GetStatusRequestStruct, opts ...grpc.CallOption) (*GetStatusResponseStruct, error)
	GetCompanyPort(ctx context.Context, in *GetCompanyPortRequestStruct, opts ...grpc.CallOption) (*GetCompanyPortResponseStruct, error)
	BindOnServicePort(ctx context.Context, in *BindOnServicePortRequestStruct, opts ...grpc.CallOption) (*BindOnServicePortResponseStruct, error)
	BeginDataCopying(ctx context.Context, in *BeginDataCopyingRequestStruct, opts ...grpc.CallOption) (*BeginDataCopyingResponseStruct, error)
	BeginDataApplying(ctx context.Context, in *BeginDataApplyingRequestStruct, opts ...grpc.CallOption) (*BeginDataApplyingResponseStruct, error)
	GetRoutineStatus(ctx context.Context, in *GetRoutineStatusRequest, opts ...grpc.CallOption) (*GetRoutineStatusResponse, error)
	GenerateMysqlConfig(ctx context.Context, in *GenerateMysqlConfigRequest, opts ...grpc.CallOption) (*GenerateMysqlConfigResponse, error)
	BindPort(ctx context.Context, in *BindPortRequestStruct, opts ...grpc.CallOption) (*BindPortResponseStruct, error)
	UnbindPort(ctx context.Context, in *UnbindPortRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	AddPort(ctx context.Context, in *AddPortRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	CreateMysqlBackup(ctx context.Context, in *CreateMysqlBackupRequestStruct, opts ...grpc.CallOption) (*CreateMysqlBackupResponseStruct, error)
	SetPortInvalid(ctx context.Context, in *SetPortInvalidRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	SyncPortStatus(ctx context.Context, in *SyncPortStatusRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	ResetPort(ctx context.Context, in *ResetPortRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	MigrateUp(ctx context.Context, in *MigrateRequestStruct, opts ...grpc.CallOption) (*MigrateResponseStruct, error)
	MigrateLegacyClean(ctx context.Context, in *MigrateRequestStruct, opts ...grpc.CallOption) (*MigrateResponseStruct, error)
	PrepareCompanyDataDir(ctx context.Context, in *PrepareCompanyDataDirRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	InitSearch(ctx context.Context, in *InitSearchRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	DropSearchTable(ctx context.Context, in *DropSearchTableRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
	UpdateDeployment(ctx context.Context, in *NullRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error)
}

type databaseControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewDatabaseControllerClient(cc grpc.ClientConnInterface) DatabaseControllerClient {
	return &databaseControllerClient{cc}
}

func (c *databaseControllerClient) GetStatus(ctx context.Context, in *GetStatusRequestStruct, opts ...grpc.CallOption) (*GetStatusResponseStruct, error) {
	out := new(GetStatusResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) GetCompanyPort(ctx context.Context, in *GetCompanyPortRequestStruct, opts ...grpc.CallOption) (*GetCompanyPortResponseStruct, error) {
	out := new(GetCompanyPortResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/GetCompanyPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) BindOnServicePort(ctx context.Context, in *BindOnServicePortRequestStruct, opts ...grpc.CallOption) (*BindOnServicePortResponseStruct, error) {
	out := new(BindOnServicePortResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/BindOnServicePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) BeginDataCopying(ctx context.Context, in *BeginDataCopyingRequestStruct, opts ...grpc.CallOption) (*BeginDataCopyingResponseStruct, error) {
	out := new(BeginDataCopyingResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/BeginDataCopying", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) BeginDataApplying(ctx context.Context, in *BeginDataApplyingRequestStruct, opts ...grpc.CallOption) (*BeginDataApplyingResponseStruct, error) {
	out := new(BeginDataApplyingResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/BeginDataApplying", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) GetRoutineStatus(ctx context.Context, in *GetRoutineStatusRequest, opts ...grpc.CallOption) (*GetRoutineStatusResponse, error) {
	out := new(GetRoutineStatusResponse)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/GetRoutineStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) GenerateMysqlConfig(ctx context.Context, in *GenerateMysqlConfigRequest, opts ...grpc.CallOption) (*GenerateMysqlConfigResponse, error) {
	out := new(GenerateMysqlConfigResponse)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/GenerateMysqlConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) BindPort(ctx context.Context, in *BindPortRequestStruct, opts ...grpc.CallOption) (*BindPortResponseStruct, error) {
	out := new(BindPortResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/BindPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) UnbindPort(ctx context.Context, in *UnbindPortRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/UnbindPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) AddPort(ctx context.Context, in *AddPortRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/AddPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) CreateMysqlBackup(ctx context.Context, in *CreateMysqlBackupRequestStruct, opts ...grpc.CallOption) (*CreateMysqlBackupResponseStruct, error) {
	out := new(CreateMysqlBackupResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/CreateMysqlBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) SetPortInvalid(ctx context.Context, in *SetPortInvalidRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/SetPortInvalid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) SyncPortStatus(ctx context.Context, in *SyncPortStatusRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/SyncPortStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) ResetPort(ctx context.Context, in *ResetPortRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/ResetPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) MigrateUp(ctx context.Context, in *MigrateRequestStruct, opts ...grpc.CallOption) (*MigrateResponseStruct, error) {
	out := new(MigrateResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/MigrateUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) MigrateLegacyClean(ctx context.Context, in *MigrateRequestStruct, opts ...grpc.CallOption) (*MigrateResponseStruct, error) {
	out := new(MigrateResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/MigrateLegacyClean", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) PrepareCompanyDataDir(ctx context.Context, in *PrepareCompanyDataDirRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/PrepareCompanyDataDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) InitSearch(ctx context.Context, in *InitSearchRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/InitSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) DropSearchTable(ctx context.Context, in *DropSearchTableRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/DropSearchTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseControllerClient) UpdateDeployment(ctx context.Context, in *NullRequestStruct, opts ...grpc.CallOption) (*NullResponseStruct, error) {
	out := new(NullResponseStruct)
	err := c.cc.Invoke(ctx, "/databaseControllerGrpc.databaseController/UpdateDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatabaseControllerServer is the server API for DatabaseController service.
type DatabaseControllerServer interface {
	GetStatus(context.Context, *GetStatusRequestStruct) (*GetStatusResponseStruct, error)
	GetCompanyPort(context.Context, *GetCompanyPortRequestStruct) (*GetCompanyPortResponseStruct, error)
	BindOnServicePort(context.Context, *BindOnServicePortRequestStruct) (*BindOnServicePortResponseStruct, error)
	BeginDataCopying(context.Context, *BeginDataCopyingRequestStruct) (*BeginDataCopyingResponseStruct, error)
	BeginDataApplying(context.Context, *BeginDataApplyingRequestStruct) (*BeginDataApplyingResponseStruct, error)
	GetRoutineStatus(context.Context, *GetRoutineStatusRequest) (*GetRoutineStatusResponse, error)
	GenerateMysqlConfig(context.Context, *GenerateMysqlConfigRequest) (*GenerateMysqlConfigResponse, error)
	BindPort(context.Context, *BindPortRequestStruct) (*BindPortResponseStruct, error)
	UnbindPort(context.Context, *UnbindPortRequestStruct) (*NullResponseStruct, error)
	AddPort(context.Context, *AddPortRequestStruct) (*NullResponseStruct, error)
	CreateMysqlBackup(context.Context, *CreateMysqlBackupRequestStruct) (*CreateMysqlBackupResponseStruct, error)
	SetPortInvalid(context.Context, *SetPortInvalidRequestStruct) (*NullResponseStruct, error)
	SyncPortStatus(context.Context, *SyncPortStatusRequestStruct) (*NullResponseStruct, error)
	ResetPort(context.Context, *ResetPortRequestStruct) (*NullResponseStruct, error)
	MigrateUp(context.Context, *MigrateRequestStruct) (*MigrateResponseStruct, error)
	MigrateLegacyClean(context.Context, *MigrateRequestStruct) (*MigrateResponseStruct, error)
	PrepareCompanyDataDir(context.Context, *PrepareCompanyDataDirRequestStruct) (*NullResponseStruct, error)
	InitSearch(context.Context, *InitSearchRequestStruct) (*NullResponseStruct, error)
	DropSearchTable(context.Context, *DropSearchTableRequestStruct) (*NullResponseStruct, error)
	UpdateDeployment(context.Context, *NullRequestStruct) (*NullResponseStruct, error)
}

// UnimplementedDatabaseControllerServer can be embedded to have forward compatible implementations.
type UnimplementedDatabaseControllerServer struct {
}

func (*UnimplementedDatabaseControllerServer) GetStatus(context.Context, *GetStatusRequestStruct) (*GetStatusResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedDatabaseControllerServer) GetCompanyPort(context.Context, *GetCompanyPortRequestStruct) (*GetCompanyPortResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyPort not implemented")
}
func (*UnimplementedDatabaseControllerServer) BindOnServicePort(context.Context, *BindOnServicePortRequestStruct) (*BindOnServicePortResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindOnServicePort not implemented")
}
func (*UnimplementedDatabaseControllerServer) BeginDataCopying(context.Context, *BeginDataCopyingRequestStruct) (*BeginDataCopyingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeginDataCopying not implemented")
}
func (*UnimplementedDatabaseControllerServer) BeginDataApplying(context.Context, *BeginDataApplyingRequestStruct) (*BeginDataApplyingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeginDataApplying not implemented")
}
func (*UnimplementedDatabaseControllerServer) GetRoutineStatus(context.Context, *GetRoutineStatusRequest) (*GetRoutineStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoutineStatus not implemented")
}
func (*UnimplementedDatabaseControllerServer) GenerateMysqlConfig(context.Context, *GenerateMysqlConfigRequest) (*GenerateMysqlConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateMysqlConfig not implemented")
}
func (*UnimplementedDatabaseControllerServer) BindPort(context.Context, *BindPortRequestStruct) (*BindPortResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindPort not implemented")
}
func (*UnimplementedDatabaseControllerServer) UnbindPort(context.Context, *UnbindPortRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbindPort not implemented")
}
func (*UnimplementedDatabaseControllerServer) AddPort(context.Context, *AddPortRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPort not implemented")
}
func (*UnimplementedDatabaseControllerServer) CreateMysqlBackup(context.Context, *CreateMysqlBackupRequestStruct) (*CreateMysqlBackupResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMysqlBackup not implemented")
}
func (*UnimplementedDatabaseControllerServer) SetPortInvalid(context.Context, *SetPortInvalidRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPortInvalid not implemented")
}
func (*UnimplementedDatabaseControllerServer) SyncPortStatus(context.Context, *SyncPortStatusRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncPortStatus not implemented")
}
func (*UnimplementedDatabaseControllerServer) ResetPort(context.Context, *ResetPortRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPort not implemented")
}
func (*UnimplementedDatabaseControllerServer) MigrateUp(context.Context, *MigrateRequestStruct) (*MigrateResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateUp not implemented")
}
func (*UnimplementedDatabaseControllerServer) MigrateLegacyClean(context.Context, *MigrateRequestStruct) (*MigrateResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateLegacyClean not implemented")
}
func (*UnimplementedDatabaseControllerServer) PrepareCompanyDataDir(context.Context, *PrepareCompanyDataDirRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrepareCompanyDataDir not implemented")
}
func (*UnimplementedDatabaseControllerServer) InitSearch(context.Context, *InitSearchRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitSearch not implemented")
}
func (*UnimplementedDatabaseControllerServer) DropSearchTable(context.Context, *DropSearchTableRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropSearchTable not implemented")
}
func (*UnimplementedDatabaseControllerServer) UpdateDeployment(context.Context, *NullRequestStruct) (*NullResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeployment not implemented")
}

func RegisterDatabaseControllerServer(s *grpc.Server, srv DatabaseControllerServer) {
	s.RegisterService(&_DatabaseController_serviceDesc, srv)
}

func _DatabaseController_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).GetStatus(ctx, req.(*GetStatusRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_GetCompanyPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyPortRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).GetCompanyPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/GetCompanyPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).GetCompanyPort(ctx, req.(*GetCompanyPortRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_BindOnServicePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindOnServicePortRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).BindOnServicePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/BindOnServicePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).BindOnServicePort(ctx, req.(*BindOnServicePortRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_BeginDataCopying_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeginDataCopyingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).BeginDataCopying(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/BeginDataCopying",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).BeginDataCopying(ctx, req.(*BeginDataCopyingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_BeginDataApplying_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeginDataApplyingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).BeginDataApplying(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/BeginDataApplying",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).BeginDataApplying(ctx, req.(*BeginDataApplyingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_GetRoutineStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoutineStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).GetRoutineStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/GetRoutineStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).GetRoutineStatus(ctx, req.(*GetRoutineStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_GenerateMysqlConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateMysqlConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).GenerateMysqlConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/GenerateMysqlConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).GenerateMysqlConfig(ctx, req.(*GenerateMysqlConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_BindPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindPortRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).BindPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/BindPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).BindPort(ctx, req.(*BindPortRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_UnbindPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbindPortRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).UnbindPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/UnbindPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).UnbindPort(ctx, req.(*UnbindPortRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_AddPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPortRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).AddPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/AddPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).AddPort(ctx, req.(*AddPortRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_CreateMysqlBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMysqlBackupRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).CreateMysqlBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/CreateMysqlBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).CreateMysqlBackup(ctx, req.(*CreateMysqlBackupRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_SetPortInvalid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPortInvalidRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).SetPortInvalid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/SetPortInvalid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).SetPortInvalid(ctx, req.(*SetPortInvalidRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_SyncPortStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncPortStatusRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).SyncPortStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/SyncPortStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).SyncPortStatus(ctx, req.(*SyncPortStatusRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_ResetPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPortRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).ResetPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/ResetPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).ResetPort(ctx, req.(*ResetPortRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_MigrateUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrateRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).MigrateUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/MigrateUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).MigrateUp(ctx, req.(*MigrateRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_MigrateLegacyClean_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrateRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).MigrateLegacyClean(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/MigrateLegacyClean",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).MigrateLegacyClean(ctx, req.(*MigrateRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_PrepareCompanyDataDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareCompanyDataDirRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).PrepareCompanyDataDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/PrepareCompanyDataDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).PrepareCompanyDataDir(ctx, req.(*PrepareCompanyDataDirRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_InitSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitSearchRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).InitSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/InitSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).InitSearch(ctx, req.(*InitSearchRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_DropSearchTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropSearchTableRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).DropSearchTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/DropSearchTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).DropSearchTable(ctx, req.(*DropSearchTableRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatabaseController_UpdateDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NullRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseControllerServer).UpdateDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/databaseControllerGrpc.databaseController/UpdateDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseControllerServer).UpdateDeployment(ctx, req.(*NullRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatabaseController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "databaseControllerGrpc.databaseController",
	HandlerType: (*DatabaseControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _DatabaseController_GetStatus_Handler,
		},
		{
			MethodName: "GetCompanyPort",
			Handler:    _DatabaseController_GetCompanyPort_Handler,
		},
		{
			MethodName: "BindOnServicePort",
			Handler:    _DatabaseController_BindOnServicePort_Handler,
		},
		{
			MethodName: "BeginDataCopying",
			Handler:    _DatabaseController_BeginDataCopying_Handler,
		},
		{
			MethodName: "BeginDataApplying",
			Handler:    _DatabaseController_BeginDataApplying_Handler,
		},
		{
			MethodName: "GetRoutineStatus",
			Handler:    _DatabaseController_GetRoutineStatus_Handler,
		},
		{
			MethodName: "GenerateMysqlConfig",
			Handler:    _DatabaseController_GenerateMysqlConfig_Handler,
		},
		{
			MethodName: "BindPort",
			Handler:    _DatabaseController_BindPort_Handler,
		},
		{
			MethodName: "UnbindPort",
			Handler:    _DatabaseController_UnbindPort_Handler,
		},
		{
			MethodName: "AddPort",
			Handler:    _DatabaseController_AddPort_Handler,
		},
		{
			MethodName: "CreateMysqlBackup",
			Handler:    _DatabaseController_CreateMysqlBackup_Handler,
		},
		{
			MethodName: "SetPortInvalid",
			Handler:    _DatabaseController_SetPortInvalid_Handler,
		},
		{
			MethodName: "SyncPortStatus",
			Handler:    _DatabaseController_SyncPortStatus_Handler,
		},
		{
			MethodName: "ResetPort",
			Handler:    _DatabaseController_ResetPort_Handler,
		},
		{
			MethodName: "MigrateUp",
			Handler:    _DatabaseController_MigrateUp_Handler,
		},
		{
			MethodName: "MigrateLegacyClean",
			Handler:    _DatabaseController_MigrateLegacyClean_Handler,
		},
		{
			MethodName: "PrepareCompanyDataDir",
			Handler:    _DatabaseController_PrepareCompanyDataDir_Handler,
		},
		{
			MethodName: "InitSearch",
			Handler:    _DatabaseController_InitSearch_Handler,
		},
		{
			MethodName: "DropSearchTable",
			Handler:    _DatabaseController_DropSearchTable_Handler,
		},
		{
			MethodName: "UpdateDeployment",
			Handler:    _DatabaseController_UpdateDeployment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/go_database_controller.proto",
}
