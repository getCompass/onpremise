// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: proto/go_kuber.proto

package kuber

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// формат запроса для company.Add
type CompanyAddRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyStackId int64  `protobuf:"varint,1,opt,name=company_stack_id,json=companyStackId,proto3" json:"company_stack_id,omitempty"`
	Namespace      string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ChartValues    string `protobuf:"bytes,3,opt,name=chart_values,json=chartValues,proto3" json:"chart_values,omitempty"`
}

func (x *CompanyAddRequestStruct) Reset() {
	*x = CompanyAddRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyAddRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyAddRequestStruct) ProtoMessage() {}

func (x *CompanyAddRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyAddRequestStruct.ProtoReflect.Descriptor instead.
func (*CompanyAddRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{0}
}

func (x *CompanyAddRequestStruct) GetCompanyStackId() int64 {
	if x != nil {
		return x.CompanyStackId
	}
	return 0
}

func (x *CompanyAddRequestStruct) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CompanyAddRequestStruct) GetChartValues() string {
	if x != nil {
		return x.ChartValues
	}
	return ""
}

// формат ответа для company.Add
type CompanyAddResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompanyAddResponseStruct) Reset() {
	*x = CompanyAddResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyAddResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyAddResponseStruct) ProtoMessage() {}

func (x *CompanyAddResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyAddResponseStruct.ProtoReflect.Descriptor instead.
func (*CompanyAddResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{1}
}

type ReleaseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreatedAt   int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version     int64  `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Status      string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ReleaseStruct) Reset() {
	*x = ReleaseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseStruct) ProtoMessage() {}

func (x *ReleaseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseStruct.ProtoReflect.Descriptor instead.
func (*ReleaseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleaseStruct) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReleaseStruct) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ReleaseStruct) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ReleaseStruct) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReleaseStruct) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReleaseStruct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// формат запроса для company.GetList
type CompanyGetListRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CompanyGetListRequestStruct) Reset() {
	*x = CompanyGetListRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGetListRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGetListRequestStruct) ProtoMessage() {}

func (x *CompanyGetListRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGetListRequestStruct.ProtoReflect.Descriptor instead.
func (*CompanyGetListRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{3}
}

func (x *CompanyGetListRequestStruct) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// формат ответа для company.GetList
type CompanyGetListResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyList []*ReleaseStruct `protobuf:"bytes,1,rep,name=company_list,json=companyList,proto3" json:"company_list,omitempty"`
}

func (x *CompanyGetListResponseStruct) Reset() {
	*x = CompanyGetListResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGetListResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGetListResponseStruct) ProtoMessage() {}

func (x *CompanyGetListResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGetListResponseStruct.ProtoReflect.Descriptor instead.
func (*CompanyGetListResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{4}
}

func (x *CompanyGetListResponseStruct) GetCompanyList() []*ReleaseStruct {
	if x != nil {
		return x.CompanyList
	}
	return nil
}

// формат запроса для company.Delete
type CompanyDeleteRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyStackId int64  `protobuf:"varint,1,opt,name=company_stack_id,json=companyStackId,proto3" json:"company_stack_id,omitempty"`
	Namespace      string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CompanyDeleteRequestStruct) Reset() {
	*x = CompanyDeleteRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyDeleteRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyDeleteRequestStruct) ProtoMessage() {}

func (x *CompanyDeleteRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyDeleteRequestStruct.ProtoReflect.Descriptor instead.
func (*CompanyDeleteRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{5}
}

func (x *CompanyDeleteRequestStruct) GetCompanyStackId() int64 {
	if x != nil {
		return x.CompanyStackId
	}
	return 0
}

func (x *CompanyDeleteRequestStruct) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// формат ответа для company.Delete
type CompanyDeleteResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompanyDeleteResponseStruct) Reset() {
	*x = CompanyDeleteResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyDeleteResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyDeleteResponseStruct) ProtoMessage() {}

func (x *CompanyDeleteResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyDeleteResponseStruct.ProtoReflect.Descriptor instead.
func (*CompanyDeleteResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{6}
}

// формат запроса для company.Update
type CompanyUpdateRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyStackId int64  `protobuf:"varint,1,opt,name=company_stack_id,json=companyStackId,proto3" json:"company_stack_id,omitempty"`
	Namespace      string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ChartValues    string `protobuf:"bytes,3,opt,name=chart_values,json=chartValues,proto3" json:"chart_values,omitempty"`
}

func (x *CompanyUpdateRequestStruct) Reset() {
	*x = CompanyUpdateRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyUpdateRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyUpdateRequestStruct) ProtoMessage() {}

func (x *CompanyUpdateRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyUpdateRequestStruct.ProtoReflect.Descriptor instead.
func (*CompanyUpdateRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{7}
}

func (x *CompanyUpdateRequestStruct) GetCompanyStackId() int64 {
	if x != nil {
		return x.CompanyStackId
	}
	return 0
}

func (x *CompanyUpdateRequestStruct) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CompanyUpdateRequestStruct) GetChartValues() string {
	if x != nil {
		return x.ChartValues
	}
	return ""
}

// формат ответа для company.Update
type CompanyUpdateResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompanyUpdateResponseStruct) Reset() {
	*x = CompanyUpdateResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyUpdateResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyUpdateResponseStruct) ProtoMessage() {}

func (x *CompanyUpdateResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyUpdateResponseStruct.ProtoReflect.Descriptor instead.
func (*CompanyUpdateResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{8}
}

// формат запроса для system.status
type SystemStatusRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemStatusRequestStruct) Reset() {
	*x = SystemStatusRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusRequestStruct) ProtoMessage() {}

func (x *SystemStatusRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{9}
}

// формат ответа для system.status
type SystemStatusResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Goroutines int64  `protobuf:"varint,2,opt,name=goroutines,proto3" json:"goroutines,omitempty"`
	Memory     int64  `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryKb   string `protobuf:"bytes,4,opt,name=memory_kb,json=memoryKb,proto3" json:"memory_kb,omitempty"`
	MemoryMb   string `protobuf:"bytes,5,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Uptime     int32  `protobuf:"varint,6,opt,name=uptime,proto3" json:"uptime,omitempty"`
}

func (x *SystemStatusResponseStruct) Reset() {
	*x = SystemStatusResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusResponseStruct) ProtoMessage() {}

func (x *SystemStatusResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{10}
}

func (x *SystemStatusResponseStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetGoroutines() int64 {
	if x != nil {
		return x.Goroutines
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemoryKb() string {
	if x != nil {
		return x.MemoryKb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetMemoryMb() string {
	if x != nil {
		return x.MemoryMb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetUptime() int32 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

// формат запроса для system.traceGoroutine
type SystemTraceGoroutineRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineRequestStruct) Reset() {
	*x = SystemTraceGoroutineRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineRequestStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{11}
}

// формат ответа для system.traceGoroutine
type SystemTraceGoroutineResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineResponseStruct) Reset() {
	*x = SystemTraceGoroutineResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineResponseStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{12}
}

// формат запроса для system.traceMemory
type SystemTraceMemoryRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryRequestStruct) Reset() {
	*x = SystemTraceMemoryRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryRequestStruct) ProtoMessage() {}

func (x *SystemTraceMemoryRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{13}
}

// формат ответа для system.traceMemory
type SystemTraceMemoryResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryResponseStruct) Reset() {
	*x = SystemTraceMemoryResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryResponseStruct) ProtoMessage() {}

func (x *SystemTraceMemoryResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{14}
}

// формат запроса для system.cpuProfile
type SystemCpuProfileRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SystemCpuProfileRequestStruct) Reset() {
	*x = SystemCpuProfileRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileRequestStruct) ProtoMessage() {}

func (x *SystemCpuProfileRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{15}
}

func (x *SystemCpuProfileRequestStruct) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// формат ответа для system.cpuProfile
type SystemCpuProfileResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCpuProfileResponseStruct) Reset() {
	*x = SystemCpuProfileResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileResponseStruct) ProtoMessage() {}

func (x *SystemCpuProfileResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{16}
}

// формат запроса для system.reloadConfig
type SystemReloadConfigRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadConfigRequestStruct) Reset() {
	*x = SystemReloadConfigRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadConfigRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadConfigRequestStruct) ProtoMessage() {}

func (x *SystemReloadConfigRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadConfigRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadConfigRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{17}
}

// формат ответа для system.reloadConfig
type SystemReloadConfigResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoggingLevel   int32  `protobuf:"varint,1,opt,name=logging_level,json=loggingLevel,proto3" json:"logging_level,omitempty"`
	ServerType     string `protobuf:"bytes,2,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	TcpPort        int64  `protobuf:"varint,3,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	GrpcPort       int64  `protobuf:"varint,4,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
	RabbitQueue    string `protobuf:"bytes,5,opt,name=rabbit_queue,json=rabbitQueue,proto3" json:"rabbit_queue,omitempty"`
	RabbitExchange string `protobuf:"bytes,6,opt,name=rabbit_exchange,json=rabbitExchange,proto3" json:"rabbit_exchange,omitempty"`
}

func (x *SystemReloadConfigResponseStruct) Reset() {
	*x = SystemReloadConfigResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadConfigResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadConfigResponseStruct) ProtoMessage() {}

func (x *SystemReloadConfigResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadConfigResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadConfigResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{18}
}

func (x *SystemReloadConfigResponseStruct) GetLoggingLevel() int32 {
	if x != nil {
		return x.LoggingLevel
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetServerType() string {
	if x != nil {
		return x.ServerType
	}
	return ""
}

func (x *SystemReloadConfigResponseStruct) GetTcpPort() int64 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetGrpcPort() int64 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetRabbitQueue() string {
	if x != nil {
		return x.RabbitQueue
	}
	return ""
}

func (x *SystemReloadConfigResponseStruct) GetRabbitExchange() string {
	if x != nil {
		return x.RabbitExchange
	}
	return ""
}

// формат запроса для system.reloadSharding
type SystemReloadShardingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadShardingRequestStruct) Reset() {
	*x = SystemReloadShardingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadShardingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadShardingRequestStruct) ProtoMessage() {}

func (x *SystemReloadShardingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadShardingRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadShardingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{19}
}

// формат ответа для system.reloadSharding
type SystemReloadShardingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadShardingResponseStruct) Reset() {
	*x = SystemReloadShardingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadShardingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadShardingResponseStruct) ProtoMessage() {}

func (x *SystemReloadShardingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadShardingResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadShardingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{20}
}

// формат запроса для system.checkSharding
type SystemCheckShardingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCheckShardingRequestStruct) Reset() {
	*x = SystemCheckShardingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckShardingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckShardingRequestStruct) ProtoMessage() {}

func (x *SystemCheckShardingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckShardingRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemCheckShardingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{21}
}

// формат ответа для system.checkSharding
type SystemCheckShardingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCheckShardingResponseStruct) Reset() {
	*x = SystemCheckShardingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_kuber_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckShardingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckShardingResponseStruct) ProtoMessage() {}

func (x *SystemCheckShardingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_kuber_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckShardingResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemCheckShardingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_kuber_proto_rawDescGZIP(), []int{22}
}

var File_proto_go_kuber_proto protoreflect.FileDescriptor

var file_proto_go_kuber_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x1b, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1a, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0xba, 0x01, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x6d, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4d, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x21,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x33, 0x0a, 0x1d,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x63, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x62,
	0x62, 0x69, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x22, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x32, 0x94, 0x09, 0x0a, 0x05, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x12, 0x22, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x23, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x25, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x26, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x26, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x2c, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x29, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x29, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x2b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x1a, 0x2c, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x42, 0x08, 0x5a, 0x06, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_go_kuber_proto_rawDescOnce sync.Once
	file_proto_go_kuber_proto_rawDescData = file_proto_go_kuber_proto_rawDesc
)

func file_proto_go_kuber_proto_rawDescGZIP() []byte {
	file_proto_go_kuber_proto_rawDescOnce.Do(func() {
		file_proto_go_kuber_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_go_kuber_proto_rawDescData)
	})
	return file_proto_go_kuber_proto_rawDescData
}

var file_proto_go_kuber_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_go_kuber_proto_goTypes = []interface{}{
	(*CompanyAddRequestStruct)(nil),            // 0: kuberGrpc.CompanyAddRequestStruct
	(*CompanyAddResponseStruct)(nil),           // 1: kuberGrpc.CompanyAddResponseStruct
	(*ReleaseStruct)(nil),                      // 2: kuberGrpc.ReleaseStruct
	(*CompanyGetListRequestStruct)(nil),        // 3: kuberGrpc.CompanyGetListRequestStruct
	(*CompanyGetListResponseStruct)(nil),       // 4: kuberGrpc.CompanyGetListResponseStruct
	(*CompanyDeleteRequestStruct)(nil),         // 5: kuberGrpc.CompanyDeleteRequestStruct
	(*CompanyDeleteResponseStruct)(nil),        // 6: kuberGrpc.CompanyDeleteResponseStruct
	(*CompanyUpdateRequestStruct)(nil),         // 7: kuberGrpc.CompanyUpdateRequestStruct
	(*CompanyUpdateResponseStruct)(nil),        // 8: kuberGrpc.CompanyUpdateResponseStruct
	(*SystemStatusRequestStruct)(nil),          // 9: kuberGrpc.SystemStatusRequestStruct
	(*SystemStatusResponseStruct)(nil),         // 10: kuberGrpc.SystemStatusResponseStruct
	(*SystemTraceGoroutineRequestStruct)(nil),  // 11: kuberGrpc.SystemTraceGoroutineRequestStruct
	(*SystemTraceGoroutineResponseStruct)(nil), // 12: kuberGrpc.SystemTraceGoroutineResponseStruct
	(*SystemTraceMemoryRequestStruct)(nil),     // 13: kuberGrpc.SystemTraceMemoryRequestStruct
	(*SystemTraceMemoryResponseStruct)(nil),    // 14: kuberGrpc.SystemTraceMemoryResponseStruct
	(*SystemCpuProfileRequestStruct)(nil),      // 15: kuberGrpc.SystemCpuProfileRequestStruct
	(*SystemCpuProfileResponseStruct)(nil),     // 16: kuberGrpc.SystemCpuProfileResponseStruct
	(*SystemReloadConfigRequestStruct)(nil),    // 17: kuberGrpc.SystemReloadConfigRequestStruct
	(*SystemReloadConfigResponseStruct)(nil),   // 18: kuberGrpc.SystemReloadConfigResponseStruct
	(*SystemReloadShardingRequestStruct)(nil),  // 19: kuberGrpc.SystemReloadShardingRequestStruct
	(*SystemReloadShardingResponseStruct)(nil), // 20: kuberGrpc.SystemReloadShardingResponseStruct
	(*SystemCheckShardingRequestStruct)(nil),   // 21: kuberGrpc.SystemCheckShardingRequestStruct
	(*SystemCheckShardingResponseStruct)(nil),  // 22: kuberGrpc.SystemCheckShardingResponseStruct
}
var file_proto_go_kuber_proto_depIdxs = []int32{
	2,  // 0: kuberGrpc.CompanyGetListResponseStruct.company_list:type_name -> kuberGrpc.ReleaseStruct
	0,  // 1: kuberGrpc.kuber.CompanyAdd:input_type -> kuberGrpc.CompanyAddRequestStruct
	3,  // 2: kuberGrpc.kuber.CompanyGetList:input_type -> kuberGrpc.CompanyGetListRequestStruct
	5,  // 3: kuberGrpc.kuber.CompanyDelete:input_type -> kuberGrpc.CompanyDeleteRequestStruct
	7,  // 4: kuberGrpc.kuber.CompanyUpdate:input_type -> kuberGrpc.CompanyUpdateRequestStruct
	9,  // 5: kuberGrpc.kuber.SystemStatus:input_type -> kuberGrpc.SystemStatusRequestStruct
	11, // 6: kuberGrpc.kuber.SystemTraceGoroutine:input_type -> kuberGrpc.SystemTraceGoroutineRequestStruct
	13, // 7: kuberGrpc.kuber.SystemTraceMemory:input_type -> kuberGrpc.SystemTraceMemoryRequestStruct
	15, // 8: kuberGrpc.kuber.SystemCpuProfile:input_type -> kuberGrpc.SystemCpuProfileRequestStruct
	17, // 9: kuberGrpc.kuber.SystemReloadConfig:input_type -> kuberGrpc.SystemReloadConfigRequestStruct
	19, // 10: kuberGrpc.kuber.SystemReloadSharding:input_type -> kuberGrpc.SystemReloadShardingRequestStruct
	21, // 11: kuberGrpc.kuber.SystemCheckSharding:input_type -> kuberGrpc.SystemCheckShardingRequestStruct
	1,  // 12: kuberGrpc.kuber.CompanyAdd:output_type -> kuberGrpc.CompanyAddResponseStruct
	4,  // 13: kuberGrpc.kuber.CompanyGetList:output_type -> kuberGrpc.CompanyGetListResponseStruct
	6,  // 14: kuberGrpc.kuber.CompanyDelete:output_type -> kuberGrpc.CompanyDeleteResponseStruct
	8,  // 15: kuberGrpc.kuber.CompanyUpdate:output_type -> kuberGrpc.CompanyUpdateResponseStruct
	10, // 16: kuberGrpc.kuber.SystemStatus:output_type -> kuberGrpc.SystemStatusResponseStruct
	12, // 17: kuberGrpc.kuber.SystemTraceGoroutine:output_type -> kuberGrpc.SystemTraceGoroutineResponseStruct
	14, // 18: kuberGrpc.kuber.SystemTraceMemory:output_type -> kuberGrpc.SystemTraceMemoryResponseStruct
	16, // 19: kuberGrpc.kuber.SystemCpuProfile:output_type -> kuberGrpc.SystemCpuProfileResponseStruct
	18, // 20: kuberGrpc.kuber.SystemReloadConfig:output_type -> kuberGrpc.SystemReloadConfigResponseStruct
	20, // 21: kuberGrpc.kuber.SystemReloadSharding:output_type -> kuberGrpc.SystemReloadShardingResponseStruct
	22, // 22: kuberGrpc.kuber.SystemCheckSharding:output_type -> kuberGrpc.SystemCheckShardingResponseStruct
	12, // [12:23] is the sub-list for method output_type
	1,  // [1:12] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_go_kuber_proto_init() }
func file_proto_go_kuber_proto_init() {
	if File_proto_go_kuber_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_go_kuber_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyAddRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyAddResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGetListRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGetListResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyDeleteRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyDeleteResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyUpdateRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyUpdateResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadConfigRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadConfigResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadShardingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadShardingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckShardingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_kuber_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckShardingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_go_kuber_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_go_kuber_proto_goTypes,
		DependencyIndexes: file_proto_go_kuber_proto_depIdxs,
		MessageInfos:      file_proto_go_kuber_proto_msgTypes,
	}.Build()
	File_proto_go_kuber_proto = out.File
	file_proto_go_kuber_proto_rawDesc = nil
	file_proto_go_kuber_proto_goTypes = nil
	file_proto_go_kuber_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KuberClient is the client API for Kuber service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KuberClient interface {
	CompanyAdd(ctx context.Context, in *CompanyAddRequestStruct, opts ...grpc.CallOption) (*CompanyAddResponseStruct, error)
	CompanyGetList(ctx context.Context, in *CompanyGetListRequestStruct, opts ...grpc.CallOption) (*CompanyGetListResponseStruct, error)
	CompanyDelete(ctx context.Context, in *CompanyDeleteRequestStruct, opts ...grpc.CallOption) (*CompanyDeleteResponseStruct, error)
	CompanyUpdate(ctx context.Context, in *CompanyUpdateRequestStruct, opts ...grpc.CallOption) (*CompanyUpdateResponseStruct, error)
	SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error)
	SystemReloadConfig(ctx context.Context, in *SystemReloadConfigRequestStruct, opts ...grpc.CallOption) (*SystemReloadConfigResponseStruct, error)
	SystemReloadSharding(ctx context.Context, in *SystemReloadShardingRequestStruct, opts ...grpc.CallOption) (*SystemReloadShardingResponseStruct, error)
	SystemCheckSharding(ctx context.Context, in *SystemCheckShardingRequestStruct, opts ...grpc.CallOption) (*SystemCheckShardingResponseStruct, error)
}

type kuberClient struct {
	cc grpc.ClientConnInterface
}

func NewKuberClient(cc grpc.ClientConnInterface) KuberClient {
	return &kuberClient{cc}
}

func (c *kuberClient) CompanyAdd(ctx context.Context, in *CompanyAddRequestStruct, opts ...grpc.CallOption) (*CompanyAddResponseStruct, error) {
	out := new(CompanyAddResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/CompanyAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) CompanyGetList(ctx context.Context, in *CompanyGetListRequestStruct, opts ...grpc.CallOption) (*CompanyGetListResponseStruct, error) {
	out := new(CompanyGetListResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/CompanyGetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) CompanyDelete(ctx context.Context, in *CompanyDeleteRequestStruct, opts ...grpc.CallOption) (*CompanyDeleteResponseStruct, error) {
	out := new(CompanyDeleteResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/CompanyDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) CompanyUpdate(ctx context.Context, in *CompanyUpdateRequestStruct, opts ...grpc.CallOption) (*CompanyUpdateResponseStruct, error) {
	out := new(CompanyUpdateResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/CompanyUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error) {
	out := new(SystemStatusResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/SystemStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error) {
	out := new(SystemTraceGoroutineResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/SystemTraceGoroutine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error) {
	out := new(SystemTraceMemoryResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/SystemTraceMemory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error) {
	out := new(SystemCpuProfileResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/SystemCpuProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) SystemReloadConfig(ctx context.Context, in *SystemReloadConfigRequestStruct, opts ...grpc.CallOption) (*SystemReloadConfigResponseStruct, error) {
	out := new(SystemReloadConfigResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/SystemReloadConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) SystemReloadSharding(ctx context.Context, in *SystemReloadShardingRequestStruct, opts ...grpc.CallOption) (*SystemReloadShardingResponseStruct, error) {
	out := new(SystemReloadShardingResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/SystemReloadSharding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kuberClient) SystemCheckSharding(ctx context.Context, in *SystemCheckShardingRequestStruct, opts ...grpc.CallOption) (*SystemCheckShardingResponseStruct, error) {
	out := new(SystemCheckShardingResponseStruct)
	err := c.cc.Invoke(ctx, "/kuberGrpc.kuber/SystemCheckSharding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KuberServer is the server API for Kuber service.
type KuberServer interface {
	CompanyAdd(context.Context, *CompanyAddRequestStruct) (*CompanyAddResponseStruct, error)
	CompanyGetList(context.Context, *CompanyGetListRequestStruct) (*CompanyGetListResponseStruct, error)
	CompanyDelete(context.Context, *CompanyDeleteRequestStruct) (*CompanyDeleteResponseStruct, error)
	CompanyUpdate(context.Context, *CompanyUpdateRequestStruct) (*CompanyUpdateResponseStruct, error)
	SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error)
	SystemReloadConfig(context.Context, *SystemReloadConfigRequestStruct) (*SystemReloadConfigResponseStruct, error)
	SystemReloadSharding(context.Context, *SystemReloadShardingRequestStruct) (*SystemReloadShardingResponseStruct, error)
	SystemCheckSharding(context.Context, *SystemCheckShardingRequestStruct) (*SystemCheckShardingResponseStruct, error)
}

// UnimplementedKuberServer can be embedded to have forward compatible implementations.
type UnimplementedKuberServer struct {
}

func (*UnimplementedKuberServer) CompanyAdd(context.Context, *CompanyAddRequestStruct) (*CompanyAddResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyAdd not implemented")
}
func (*UnimplementedKuberServer) CompanyGetList(context.Context, *CompanyGetListRequestStruct) (*CompanyGetListResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyGetList not implemented")
}
func (*UnimplementedKuberServer) CompanyDelete(context.Context, *CompanyDeleteRequestStruct) (*CompanyDeleteResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyDelete not implemented")
}
func (*UnimplementedKuberServer) CompanyUpdate(context.Context, *CompanyUpdateRequestStruct) (*CompanyUpdateResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyUpdate not implemented")
}
func (*UnimplementedKuberServer) SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemStatus not implemented")
}
func (*UnimplementedKuberServer) SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceGoroutine not implemented")
}
func (*UnimplementedKuberServer) SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceMemory not implemented")
}
func (*UnimplementedKuberServer) SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemCpuProfile not implemented")
}
func (*UnimplementedKuberServer) SystemReloadConfig(context.Context, *SystemReloadConfigRequestStruct) (*SystemReloadConfigResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemReloadConfig not implemented")
}
func (*UnimplementedKuberServer) SystemReloadSharding(context.Context, *SystemReloadShardingRequestStruct) (*SystemReloadShardingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemReloadSharding not implemented")
}
func (*UnimplementedKuberServer) SystemCheckSharding(context.Context, *SystemCheckShardingRequestStruct) (*SystemCheckShardingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemCheckSharding not implemented")
}

func RegisterKuberServer(s *grpc.Server, srv KuberServer) {
	s.RegisterService(&_Kuber_serviceDesc, srv)
}

func _Kuber_CompanyAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyAddRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).CompanyAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/CompanyAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).CompanyAdd(ctx, req.(*CompanyAddRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_CompanyGetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyGetListRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).CompanyGetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/CompanyGetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).CompanyGetList(ctx, req.(*CompanyGetListRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_CompanyDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyDeleteRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).CompanyDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/CompanyDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).CompanyDelete(ctx, req.(*CompanyDeleteRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_CompanyUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyUpdateRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).CompanyUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/CompanyUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).CompanyUpdate(ctx, req.(*CompanyUpdateRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_SystemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemStatusRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).SystemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/SystemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).SystemStatus(ctx, req.(*SystemStatusRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_SystemTraceGoroutine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceGoroutineRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).SystemTraceGoroutine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/SystemTraceGoroutine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).SystemTraceGoroutine(ctx, req.(*SystemTraceGoroutineRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_SystemTraceMemory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceMemoryRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).SystemTraceMemory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/SystemTraceMemory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).SystemTraceMemory(ctx, req.(*SystemTraceMemoryRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_SystemCpuProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemCpuProfileRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).SystemCpuProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/SystemCpuProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).SystemCpuProfile(ctx, req.(*SystemCpuProfileRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_SystemReloadConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemReloadConfigRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).SystemReloadConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/SystemReloadConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).SystemReloadConfig(ctx, req.(*SystemReloadConfigRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_SystemReloadSharding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemReloadShardingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).SystemReloadSharding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/SystemReloadSharding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).SystemReloadSharding(ctx, req.(*SystemReloadShardingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kuber_SystemCheckSharding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemCheckShardingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KuberServer).SystemCheckSharding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kuberGrpc.kuber/SystemCheckSharding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KuberServer).SystemCheckSharding(ctx, req.(*SystemCheckShardingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kuber_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kuberGrpc.kuber",
	HandlerType: (*KuberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CompanyAdd",
			Handler:    _Kuber_CompanyAdd_Handler,
		},
		{
			MethodName: "CompanyGetList",
			Handler:    _Kuber_CompanyGetList_Handler,
		},
		{
			MethodName: "CompanyDelete",
			Handler:    _Kuber_CompanyDelete_Handler,
		},
		{
			MethodName: "CompanyUpdate",
			Handler:    _Kuber_CompanyUpdate_Handler,
		},
		{
			MethodName: "SystemStatus",
			Handler:    _Kuber_SystemStatus_Handler,
		},
		{
			MethodName: "SystemTraceGoroutine",
			Handler:    _Kuber_SystemTraceGoroutine_Handler,
		},
		{
			MethodName: "SystemTraceMemory",
			Handler:    _Kuber_SystemTraceMemory_Handler,
		},
		{
			MethodName: "SystemCpuProfile",
			Handler:    _Kuber_SystemCpuProfile_Handler,
		},
		{
			MethodName: "SystemReloadConfig",
			Handler:    _Kuber_SystemReloadConfig_Handler,
		},
		{
			MethodName: "SystemReloadSharding",
			Handler:    _Kuber_SystemReloadSharding_Handler,
		},
		{
			MethodName: "SystemCheckSharding",
			Handler:    _Kuber_SystemCheckSharding_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/go_kuber.proto",
}
