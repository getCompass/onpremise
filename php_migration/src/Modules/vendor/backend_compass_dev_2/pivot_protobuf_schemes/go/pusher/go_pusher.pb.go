// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: proto/go_pusher.proto

package pusher

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// формат запроса для pusher.UpdateBadge
type PusherUpdateBadgeRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PusherUpdateBadgeRequestStruct) Reset() {
	*x = PusherUpdateBadgeRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PusherUpdateBadgeRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PusherUpdateBadgeRequestStruct) ProtoMessage() {}

func (x *PusherUpdateBadgeRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PusherUpdateBadgeRequestStruct.ProtoReflect.Descriptor instead.
func (*PusherUpdateBadgeRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{0}
}

func (x *PusherUpdateBadgeRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// формат ответа для pusher.UpdateBadge
type PusherUpdateBadgeResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PusherUpdateBadgeResponseStruct) Reset() {
	*x = PusherUpdateBadgeResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PusherUpdateBadgeResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PusherUpdateBadgeResponseStruct) ProtoMessage() {}

func (x *PusherUpdateBadgeResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PusherUpdateBadgeResponseStruct.ProtoReflect.Descriptor instead.
func (*PusherUpdateBadgeResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{1}
}

type TokenItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version           int64  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Token             string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Platform          string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	TokenType         int64  `protobuf:"varint,4,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	SessionUniq       string `protobuf:"bytes,5,opt,name=session_uniq,json=sessionUniq,proto3" json:"session_uniq,omitempty"`
	DeviceId          string `protobuf:"bytes,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SoundType         int64  `protobuf:"varint,7,opt,name=sound_type,json=soundType,proto3" json:"sound_type,omitempty"`
	IsNewFirebasePush int64  `protobuf:"varint,8,opt,name=is_new_firebase_push,json=isNewFirebasePush,proto3" json:"is_new_firebase_push,omitempty"`
	AppName           string `protobuf:"bytes,9,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *TokenItem) Reset() {
	*x = TokenItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenItem) ProtoMessage() {}

func (x *TokenItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenItem.ProtoReflect.Descriptor instead.
func (*TokenItem) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{2}
}

func (x *TokenItem) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TokenItem) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenItem) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *TokenItem) GetTokenType() int64 {
	if x != nil {
		return x.TokenType
	}
	return 0
}

func (x *TokenItem) GetSessionUniq() string {
	if x != nil {
		return x.SessionUniq
	}
	return ""
}

func (x *TokenItem) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *TokenItem) GetSoundType() int64 {
	if x != nil {
		return x.SoundType
	}
	return 0
}

func (x *TokenItem) GetIsNewFirebasePush() int64 {
	if x != nil {
		return x.IsNewFirebasePush
	}
	return 0
}

func (x *TokenItem) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

// формат запроса для pusher.SendTestPush
type PusherSendTestPushRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64      `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TokenItem *TokenItem `protobuf:"bytes,2,opt,name=token_item,json=tokenItem,proto3" json:"token_item,omitempty"`
	Type      string     `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PusherSendTestPushRequestStruct) Reset() {
	*x = PusherSendTestPushRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PusherSendTestPushRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PusherSendTestPushRequestStruct) ProtoMessage() {}

func (x *PusherSendTestPushRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PusherSendTestPushRequestStruct.ProtoReflect.Descriptor instead.
func (*PusherSendTestPushRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{3}
}

func (x *PusherSendTestPushRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PusherSendTestPushRequestStruct) GetTokenItem() *TokenItem {
	if x != nil {
		return x.TokenItem
	}
	return nil
}

func (x *PusherSendTestPushRequestStruct) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// формат ответа для pusher.SendTestPush
type PusherSendTestPushResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PusherSendTestPushResponseStruct) Reset() {
	*x = PusherSendTestPushResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PusherSendTestPushResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PusherSendTestPushResponseStruct) ProtoMessage() {}

func (x *PusherSendTestPushResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PusherSendTestPushResponseStruct.ProtoReflect.Descriptor instead.
func (*PusherSendTestPushResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{4}
}

// формат запроса для system.status
type SystemStatusRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemStatusRequestStruct) Reset() {
	*x = SystemStatusRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusRequestStruct) ProtoMessage() {}

func (x *SystemStatusRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{5}
}

// формат ответа для system.status
type SystemStatusResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Goroutines int64  `protobuf:"varint,2,opt,name=goroutines,proto3" json:"goroutines,omitempty"`
	Memory     int64  `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryKb   string `protobuf:"bytes,4,opt,name=memory_kb,json=memoryKb,proto3" json:"memory_kb,omitempty"`
	MemoryMb   string `protobuf:"bytes,5,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Uptime     int32  `protobuf:"varint,6,opt,name=uptime,proto3" json:"uptime,omitempty"`
}

func (x *SystemStatusResponseStruct) Reset() {
	*x = SystemStatusResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusResponseStruct) ProtoMessage() {}

func (x *SystemStatusResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{6}
}

func (x *SystemStatusResponseStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetGoroutines() int64 {
	if x != nil {
		return x.Goroutines
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemoryKb() string {
	if x != nil {
		return x.MemoryKb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetMemoryMb() string {
	if x != nil {
		return x.MemoryMb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetUptime() int32 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

// формат запроса для system.traceGoroutine
type SystemTraceGoroutineRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineRequestStruct) Reset() {
	*x = SystemTraceGoroutineRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineRequestStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{7}
}

// формат ответа для system.traceGoroutine
type SystemTraceGoroutineResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineResponseStruct) Reset() {
	*x = SystemTraceGoroutineResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineResponseStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{8}
}

// формат запроса для system.traceMemory
type SystemTraceMemoryRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryRequestStruct) Reset() {
	*x = SystemTraceMemoryRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryRequestStruct) ProtoMessage() {}

func (x *SystemTraceMemoryRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{9}
}

// формат ответа для system.traceMemory
type SystemTraceMemoryResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryResponseStruct) Reset() {
	*x = SystemTraceMemoryResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryResponseStruct) ProtoMessage() {}

func (x *SystemTraceMemoryResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{10}
}

// формат запроса для system.cpuProfile
type SystemCpuProfileRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SystemCpuProfileRequestStruct) Reset() {
	*x = SystemCpuProfileRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileRequestStruct) ProtoMessage() {}

func (x *SystemCpuProfileRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{11}
}

func (x *SystemCpuProfileRequestStruct) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// формат ответа для system.cpuProfile
type SystemCpuProfileResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCpuProfileResponseStruct) Reset() {
	*x = SystemCpuProfileResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileResponseStruct) ProtoMessage() {}

func (x *SystemCpuProfileResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{12}
}

// формат запроса для system.reloadConfig
type SystemReloadConfigRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadConfigRequestStruct) Reset() {
	*x = SystemReloadConfigRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadConfigRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadConfigRequestStruct) ProtoMessage() {}

func (x *SystemReloadConfigRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadConfigRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadConfigRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{13}
}

// формат ответа для system.reloadConfig
type SystemReloadConfigResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoggingLevel   int32  `protobuf:"varint,1,opt,name=logging_level,json=loggingLevel,proto3" json:"logging_level,omitempty"`
	ServerType     string `protobuf:"bytes,2,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	CurrentDpc     int64  `protobuf:"varint,3,opt,name=current_dpc,json=currentDpc,proto3" json:"current_dpc,omitempty"`
	TcpPort        int64  `protobuf:"varint,4,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	RabbitQueue    string `protobuf:"bytes,5,opt,name=rabbit_queue,json=rabbitQueue,proto3" json:"rabbit_queue,omitempty"`
	RabbitExchange string `protobuf:"bytes,6,opt,name=rabbit_exchange,json=rabbitExchange,proto3" json:"rabbit_exchange,omitempty"`
}

func (x *SystemReloadConfigResponseStruct) Reset() {
	*x = SystemReloadConfigResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadConfigResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadConfigResponseStruct) ProtoMessage() {}

func (x *SystemReloadConfigResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadConfigResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadConfigResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{14}
}

func (x *SystemReloadConfigResponseStruct) GetLoggingLevel() int32 {
	if x != nil {
		return x.LoggingLevel
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetServerType() string {
	if x != nil {
		return x.ServerType
	}
	return ""
}

func (x *SystemReloadConfigResponseStruct) GetCurrentDpc() int64 {
	if x != nil {
		return x.CurrentDpc
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetTcpPort() int64 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *SystemReloadConfigResponseStruct) GetRabbitQueue() string {
	if x != nil {
		return x.RabbitQueue
	}
	return ""
}

func (x *SystemReloadConfigResponseStruct) GetRabbitExchange() string {
	if x != nil {
		return x.RabbitExchange
	}
	return ""
}

// формат запроса для system.reloadSharding
type SystemReloadShardingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadShardingRequestStruct) Reset() {
	*x = SystemReloadShardingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadShardingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadShardingRequestStruct) ProtoMessage() {}

func (x *SystemReloadShardingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadShardingRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadShardingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{15}
}

// формат ответа для system.reloadSharding
type SystemReloadShardingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemReloadShardingResponseStruct) Reset() {
	*x = SystemReloadShardingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemReloadShardingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemReloadShardingResponseStruct) ProtoMessage() {}

func (x *SystemReloadShardingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemReloadShardingResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemReloadShardingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{16}
}

// формат запроса для system.checkSharding
type SystemCheckShardingRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCheckShardingRequestStruct) Reset() {
	*x = SystemCheckShardingRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckShardingRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckShardingRequestStruct) ProtoMessage() {}

func (x *SystemCheckShardingRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckShardingRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemCheckShardingRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{17}
}

// формат ответа для system.checkSharding
type SystemCheckShardingResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCheckShardingResponseStruct) Reset() {
	*x = SystemCheckShardingResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pusher_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckShardingResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckShardingResponseStruct) ProtoMessage() {}

func (x *SystemCheckShardingResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pusher_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckShardingResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemCheckShardingResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pusher_proto_rawDescGZIP(), []int{18}
}

var File_proto_go_pusher_proto protoreflect.FileDescriptor

var file_proto_go_pusher_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x22, 0x39, 0x0a, 0x1e, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x21,
	0x0a, 0x1f, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0xa1, 0x02, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f,
	0x6e, 0x65, 0x77, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x75, 0x73,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x46, 0x69,
	0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x1f, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a, 0x20,
	0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x1b, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xba, 0x01,
	0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x6b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x4b, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x6d, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x4d, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x24, 0x0a, 0x22, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x33, 0x0a, 0x1d, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0x20, 0x0a, 0x1e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x70, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x70, 0x63,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x63, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x61, 0x62, 0x62, 0x69, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x24, 0x0a, 0x22,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x32, 0x84, 0x08, 0x0a, 0x06,
	0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x75,
	0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x12, 0x2b, 0x2e, 0x70,
	0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x14, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x12, 0x71, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x2e, 0x70, 0x75,
	0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x75, 0x73,
	0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x13,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x2c, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_go_pusher_proto_rawDescOnce sync.Once
	file_proto_go_pusher_proto_rawDescData = file_proto_go_pusher_proto_rawDesc
)

func file_proto_go_pusher_proto_rawDescGZIP() []byte {
	file_proto_go_pusher_proto_rawDescOnce.Do(func() {
		file_proto_go_pusher_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_go_pusher_proto_rawDescData)
	})
	return file_proto_go_pusher_proto_rawDescData
}

var file_proto_go_pusher_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_go_pusher_proto_goTypes = []interface{}{
	(*PusherUpdateBadgeRequestStruct)(nil),     // 0: pusherGrpc.PusherUpdateBadgeRequestStruct
	(*PusherUpdateBadgeResponseStruct)(nil),    // 1: pusherGrpc.PusherUpdateBadgeResponseStruct
	(*TokenItem)(nil),                          // 2: pusherGrpc.TokenItem
	(*PusherSendTestPushRequestStruct)(nil),    // 3: pusherGrpc.PusherSendTestPushRequestStruct
	(*PusherSendTestPushResponseStruct)(nil),   // 4: pusherGrpc.PusherSendTestPushResponseStruct
	(*SystemStatusRequestStruct)(nil),          // 5: pusherGrpc.SystemStatusRequestStruct
	(*SystemStatusResponseStruct)(nil),         // 6: pusherGrpc.SystemStatusResponseStruct
	(*SystemTraceGoroutineRequestStruct)(nil),  // 7: pusherGrpc.SystemTraceGoroutineRequestStruct
	(*SystemTraceGoroutineResponseStruct)(nil), // 8: pusherGrpc.SystemTraceGoroutineResponseStruct
	(*SystemTraceMemoryRequestStruct)(nil),     // 9: pusherGrpc.SystemTraceMemoryRequestStruct
	(*SystemTraceMemoryResponseStruct)(nil),    // 10: pusherGrpc.SystemTraceMemoryResponseStruct
	(*SystemCpuProfileRequestStruct)(nil),      // 11: pusherGrpc.SystemCpuProfileRequestStruct
	(*SystemCpuProfileResponseStruct)(nil),     // 12: pusherGrpc.SystemCpuProfileResponseStruct
	(*SystemReloadConfigRequestStruct)(nil),    // 13: pusherGrpc.SystemReloadConfigRequestStruct
	(*SystemReloadConfigResponseStruct)(nil),   // 14: pusherGrpc.SystemReloadConfigResponseStruct
	(*SystemReloadShardingRequestStruct)(nil),  // 15: pusherGrpc.SystemReloadShardingRequestStruct
	(*SystemReloadShardingResponseStruct)(nil), // 16: pusherGrpc.SystemReloadShardingResponseStruct
	(*SystemCheckShardingRequestStruct)(nil),   // 17: pusherGrpc.SystemCheckShardingRequestStruct
	(*SystemCheckShardingResponseStruct)(nil),  // 18: pusherGrpc.SystemCheckShardingResponseStruct
}
var file_proto_go_pusher_proto_depIdxs = []int32{
	2,  // 0: pusherGrpc.PusherSendTestPushRequestStruct.token_item:type_name -> pusherGrpc.TokenItem
	0,  // 1: pusherGrpc.pusher.PusherUpdateBadge:input_type -> pusherGrpc.PusherUpdateBadgeRequestStruct
	3,  // 2: pusherGrpc.pusher.PusherSendTestPush:input_type -> pusherGrpc.PusherSendTestPushRequestStruct
	5,  // 3: pusherGrpc.pusher.SystemStatus:input_type -> pusherGrpc.SystemStatusRequestStruct
	7,  // 4: pusherGrpc.pusher.SystemTraceGoroutine:input_type -> pusherGrpc.SystemTraceGoroutineRequestStruct
	9,  // 5: pusherGrpc.pusher.SystemTraceMemory:input_type -> pusherGrpc.SystemTraceMemoryRequestStruct
	11, // 6: pusherGrpc.pusher.SystemCpuProfile:input_type -> pusherGrpc.SystemCpuProfileRequestStruct
	13, // 7: pusherGrpc.pusher.SystemReloadConfig:input_type -> pusherGrpc.SystemReloadConfigRequestStruct
	15, // 8: pusherGrpc.pusher.SystemReloadSharding:input_type -> pusherGrpc.SystemReloadShardingRequestStruct
	17, // 9: pusherGrpc.pusher.SystemCheckSharding:input_type -> pusherGrpc.SystemCheckShardingRequestStruct
	1,  // 10: pusherGrpc.pusher.PusherUpdateBadge:output_type -> pusherGrpc.PusherUpdateBadgeResponseStruct
	4,  // 11: pusherGrpc.pusher.PusherSendTestPush:output_type -> pusherGrpc.PusherSendTestPushResponseStruct
	6,  // 12: pusherGrpc.pusher.SystemStatus:output_type -> pusherGrpc.SystemStatusResponseStruct
	8,  // 13: pusherGrpc.pusher.SystemTraceGoroutine:output_type -> pusherGrpc.SystemTraceGoroutineResponseStruct
	10, // 14: pusherGrpc.pusher.SystemTraceMemory:output_type -> pusherGrpc.SystemTraceMemoryResponseStruct
	12, // 15: pusherGrpc.pusher.SystemCpuProfile:output_type -> pusherGrpc.SystemCpuProfileResponseStruct
	14, // 16: pusherGrpc.pusher.SystemReloadConfig:output_type -> pusherGrpc.SystemReloadConfigResponseStruct
	16, // 17: pusherGrpc.pusher.SystemReloadSharding:output_type -> pusherGrpc.SystemReloadShardingResponseStruct
	18, // 18: pusherGrpc.pusher.SystemCheckSharding:output_type -> pusherGrpc.SystemCheckShardingResponseStruct
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_go_pusher_proto_init() }
func file_proto_go_pusher_proto_init() {
	if File_proto_go_pusher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_go_pusher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PusherUpdateBadgeRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PusherUpdateBadgeResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PusherSendTestPushRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PusherSendTestPushResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadConfigRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadConfigResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadShardingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemReloadShardingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckShardingRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pusher_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckShardingResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_go_pusher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_go_pusher_proto_goTypes,
		DependencyIndexes: file_proto_go_pusher_proto_depIdxs,
		MessageInfos:      file_proto_go_pusher_proto_msgTypes,
	}.Build()
	File_proto_go_pusher_proto = out.File
	file_proto_go_pusher_proto_rawDesc = nil
	file_proto_go_pusher_proto_goTypes = nil
	file_proto_go_pusher_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PusherClient is the client API for Pusher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PusherClient interface {
	PusherUpdateBadge(ctx context.Context, in *PusherUpdateBadgeRequestStruct, opts ...grpc.CallOption) (*PusherUpdateBadgeResponseStruct, error)
	PusherSendTestPush(ctx context.Context, in *PusherSendTestPushRequestStruct, opts ...grpc.CallOption) (*PusherSendTestPushResponseStruct, error)
	SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error)
	SystemReloadConfig(ctx context.Context, in *SystemReloadConfigRequestStruct, opts ...grpc.CallOption) (*SystemReloadConfigResponseStruct, error)
	SystemReloadSharding(ctx context.Context, in *SystemReloadShardingRequestStruct, opts ...grpc.CallOption) (*SystemReloadShardingResponseStruct, error)
	SystemCheckSharding(ctx context.Context, in *SystemCheckShardingRequestStruct, opts ...grpc.CallOption) (*SystemCheckShardingResponseStruct, error)
}

type pusherClient struct {
	cc grpc.ClientConnInterface
}

func NewPusherClient(cc grpc.ClientConnInterface) PusherClient {
	return &pusherClient{cc}
}

func (c *pusherClient) PusherUpdateBadge(ctx context.Context, in *PusherUpdateBadgeRequestStruct, opts ...grpc.CallOption) (*PusherUpdateBadgeResponseStruct, error) {
	out := new(PusherUpdateBadgeResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/PusherUpdateBadge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) PusherSendTestPush(ctx context.Context, in *PusherSendTestPushRequestStruct, opts ...grpc.CallOption) (*PusherSendTestPushResponseStruct, error) {
	out := new(PusherSendTestPushResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/PusherSendTestPush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error) {
	out := new(SystemStatusResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/SystemStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error) {
	out := new(SystemTraceGoroutineResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/SystemTraceGoroutine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error) {
	out := new(SystemTraceMemoryResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/SystemTraceMemory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error) {
	out := new(SystemCpuProfileResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/SystemCpuProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) SystemReloadConfig(ctx context.Context, in *SystemReloadConfigRequestStruct, opts ...grpc.CallOption) (*SystemReloadConfigResponseStruct, error) {
	out := new(SystemReloadConfigResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/SystemReloadConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) SystemReloadSharding(ctx context.Context, in *SystemReloadShardingRequestStruct, opts ...grpc.CallOption) (*SystemReloadShardingResponseStruct, error) {
	out := new(SystemReloadShardingResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/SystemReloadSharding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pusherClient) SystemCheckSharding(ctx context.Context, in *SystemCheckShardingRequestStruct, opts ...grpc.CallOption) (*SystemCheckShardingResponseStruct, error) {
	out := new(SystemCheckShardingResponseStruct)
	err := c.cc.Invoke(ctx, "/pusherGrpc.pusher/SystemCheckSharding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PusherServer is the server API for Pusher service.
type PusherServer interface {
	PusherUpdateBadge(context.Context, *PusherUpdateBadgeRequestStruct) (*PusherUpdateBadgeResponseStruct, error)
	PusherSendTestPush(context.Context, *PusherSendTestPushRequestStruct) (*PusherSendTestPushResponseStruct, error)
	SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error)
	SystemReloadConfig(context.Context, *SystemReloadConfigRequestStruct) (*SystemReloadConfigResponseStruct, error)
	SystemReloadSharding(context.Context, *SystemReloadShardingRequestStruct) (*SystemReloadShardingResponseStruct, error)
	SystemCheckSharding(context.Context, *SystemCheckShardingRequestStruct) (*SystemCheckShardingResponseStruct, error)
}

// UnimplementedPusherServer can be embedded to have forward compatible implementations.
type UnimplementedPusherServer struct {
}

func (*UnimplementedPusherServer) PusherUpdateBadge(context.Context, *PusherUpdateBadgeRequestStruct) (*PusherUpdateBadgeResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PusherUpdateBadge not implemented")
}
func (*UnimplementedPusherServer) PusherSendTestPush(context.Context, *PusherSendTestPushRequestStruct) (*PusherSendTestPushResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PusherSendTestPush not implemented")
}
func (*UnimplementedPusherServer) SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemStatus not implemented")
}
func (*UnimplementedPusherServer) SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceGoroutine not implemented")
}
func (*UnimplementedPusherServer) SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceMemory not implemented")
}
func (*UnimplementedPusherServer) SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemCpuProfile not implemented")
}
func (*UnimplementedPusherServer) SystemReloadConfig(context.Context, *SystemReloadConfigRequestStruct) (*SystemReloadConfigResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemReloadConfig not implemented")
}
func (*UnimplementedPusherServer) SystemReloadSharding(context.Context, *SystemReloadShardingRequestStruct) (*SystemReloadShardingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemReloadSharding not implemented")
}
func (*UnimplementedPusherServer) SystemCheckSharding(context.Context, *SystemCheckShardingRequestStruct) (*SystemCheckShardingResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemCheckSharding not implemented")
}

func RegisterPusherServer(s *grpc.Server, srv PusherServer) {
	s.RegisterService(&_Pusher_serviceDesc, srv)
}

func _Pusher_PusherUpdateBadge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PusherUpdateBadgeRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).PusherUpdateBadge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/PusherUpdateBadge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).PusherUpdateBadge(ctx, req.(*PusherUpdateBadgeRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_PusherSendTestPush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PusherSendTestPushRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).PusherSendTestPush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/PusherSendTestPush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).PusherSendTestPush(ctx, req.(*PusherSendTestPushRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_SystemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemStatusRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).SystemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/SystemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).SystemStatus(ctx, req.(*SystemStatusRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_SystemTraceGoroutine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceGoroutineRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).SystemTraceGoroutine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/SystemTraceGoroutine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).SystemTraceGoroutine(ctx, req.(*SystemTraceGoroutineRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_SystemTraceMemory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceMemoryRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).SystemTraceMemory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/SystemTraceMemory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).SystemTraceMemory(ctx, req.(*SystemTraceMemoryRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_SystemCpuProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemCpuProfileRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).SystemCpuProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/SystemCpuProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).SystemCpuProfile(ctx, req.(*SystemCpuProfileRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_SystemReloadConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemReloadConfigRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).SystemReloadConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/SystemReloadConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).SystemReloadConfig(ctx, req.(*SystemReloadConfigRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_SystemReloadSharding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemReloadShardingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).SystemReloadSharding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/SystemReloadSharding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).SystemReloadSharding(ctx, req.(*SystemReloadShardingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pusher_SystemCheckSharding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemCheckShardingRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PusherServer).SystemCheckSharding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pusherGrpc.pusher/SystemCheckSharding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PusherServer).SystemCheckSharding(ctx, req.(*SystemCheckShardingRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pusher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pusherGrpc.pusher",
	HandlerType: (*PusherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PusherUpdateBadge",
			Handler:    _Pusher_PusherUpdateBadge_Handler,
		},
		{
			MethodName: "PusherSendTestPush",
			Handler:    _Pusher_PusherSendTestPush_Handler,
		},
		{
			MethodName: "SystemStatus",
			Handler:    _Pusher_SystemStatus_Handler,
		},
		{
			MethodName: "SystemTraceGoroutine",
			Handler:    _Pusher_SystemTraceGoroutine_Handler,
		},
		{
			MethodName: "SystemTraceMemory",
			Handler:    _Pusher_SystemTraceMemory_Handler,
		},
		{
			MethodName: "SystemCpuProfile",
			Handler:    _Pusher_SystemCpuProfile_Handler,
		},
		{
			MethodName: "SystemReloadConfig",
			Handler:    _Pusher_SystemReloadConfig_Handler,
		},
		{
			MethodName: "SystemReloadSharding",
			Handler:    _Pusher_SystemReloadSharding_Handler,
		},
		{
			MethodName: "SystemCheckSharding",
			Handler:    _Pusher_SystemCheckSharding_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/go_pusher.proto",
}
