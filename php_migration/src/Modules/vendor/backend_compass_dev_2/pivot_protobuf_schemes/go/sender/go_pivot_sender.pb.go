// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.1
// source: proto/go_pivot_sender.proto

package sender

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// формат запроса для Sender.SetToken
type SenderSetTokenRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Platform  string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	DeviceId  string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserId    int64  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Expire    int64  `protobuf:"varint,5,opt,name=expire,proto3" json:"expire,omitempty"`
	CompanyId int64  `protobuf:"varint,6,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderSetTokenRequestStruct) Reset() {
	*x = SenderSetTokenRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSetTokenRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSetTokenRequestStruct) ProtoMessage() {}

func (x *SenderSetTokenRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSetTokenRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderSetTokenRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{0}
}

func (x *SenderSetTokenRequestStruct) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SenderSetTokenRequestStruct) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SenderSetTokenRequestStruct) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SenderSetTokenRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SenderSetTokenRequestStruct) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *SenderSetTokenRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.SetToken
type SenderSetTokenResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node int64 `protobuf:"varint,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *SenderSetTokenResponseStruct) Reset() {
	*x = SenderSetTokenResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSetTokenResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSetTokenResponseStruct) ProtoMessage() {}

func (x *SenderSetTokenResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSetTokenResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderSetTokenResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{1}
}

func (x *SenderSetTokenResponseStruct) GetNode() int64 {
	if x != nil {
		return x.Node
	}
	return 0
}

// данная структура полная копия одноименной структуры из company_protobuf_schemes
type EventUserStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NeedForcePush int64 `protobuf:"varint,2,opt,name=need_force_push,json=needForcePush,proto3" json:"need_force_push,omitempty"`
	NeedPush      int64 `protobuf:"varint,3,opt,name=need_push,json=needPush,proto3" json:"need_push,omitempty"`
}

func (x *EventUserStruct) Reset() {
	*x = EventUserStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUserStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUserStruct) ProtoMessage() {}

func (x *EventUserStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUserStruct.ProtoReflect.Descriptor instead.
func (*EventUserStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{2}
}

func (x *EventUserStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventUserStruct) GetNeedForcePush() int64 {
	if x != nil {
		return x.NeedForcePush
	}
	return 0
}

func (x *EventUserStruct) GetNeedPush() int64 {
	if x != nil {
		return x.NeedPush
	}
	return 0
}

// формат структуры версии события
type EventVersionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EventVersionItem) Reset() {
	*x = EventVersionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventVersionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventVersionItem) ProtoMessage() {}

func (x *EventVersionItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventVersionItem.ProtoReflect.Descriptor instead.
func (*EventVersionItem) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{3}
}

func (x *EventVersionItem) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EventVersionItem) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// формат запроса для Sender.SendEvent
type SenderSendEventRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList         []*EventUserStruct  `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	Event            string              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	EventVersionList []*EventVersionItem `protobuf:"bytes,3,rep,name=event_version_list,json=eventVersionList,proto3" json:"event_version_list,omitempty"`
	PushData         string              `protobuf:"bytes,4,opt,name=push_data,json=pushData,proto3" json:"push_data,omitempty"`
	WsUsers          string              `protobuf:"bytes,5,opt,name=ws_users,json=wsUsers,proto3" json:"ws_users,omitempty"`
	Uuid             string              `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
	RoutineKey       string              `protobuf:"bytes,7,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	CompanyId        int64               `protobuf:"varint,8,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderSendEventRequestStruct) Reset() {
	*x = SenderSendEventRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendEventRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendEventRequestStruct) ProtoMessage() {}

func (x *SenderSendEventRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendEventRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderSendEventRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{4}
}

func (x *SenderSendEventRequestStruct) GetUserList() []*EventUserStruct {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *SenderSendEventRequestStruct) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *SenderSendEventRequestStruct) GetEventVersionList() []*EventVersionItem {
	if x != nil {
		return x.EventVersionList
	}
	return nil
}

func (x *SenderSendEventRequestStruct) GetPushData() string {
	if x != nil {
		return x.PushData
	}
	return ""
}

func (x *SenderSendEventRequestStruct) GetWsUsers() string {
	if x != nil {
		return x.WsUsers
	}
	return ""
}

func (x *SenderSendEventRequestStruct) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SenderSendEventRequestStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *SenderSendEventRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.SendEvent
type SenderSendEventResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderSendEventResponseStruct) Reset() {
	*x = SenderSendEventResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendEventResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendEventResponseStruct) ProtoMessage() {}

func (x *SenderSendEventResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendEventResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderSendEventResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{5}
}

// формат запроса для Sender.SendEventToAll
type SenderSendEventToAllRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event            string              `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	EventVersionList []*EventVersionItem `protobuf:"bytes,2,rep,name=event_version_list,json=eventVersionList,proto3" json:"event_version_list,omitempty"`
	PushData         string              `protobuf:"bytes,3,opt,name=push_data,json=pushData,proto3" json:"push_data,omitempty"`
	WsUsers          string              `protobuf:"bytes,4,opt,name=ws_users,json=wsUsers,proto3" json:"ws_users,omitempty"`
	Uuid             string              `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	RoutineKey       string              `protobuf:"bytes,6,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	IsNeedPush       int64               `protobuf:"varint,7,opt,name=is_need_push,json=isNeedPush,proto3" json:"is_need_push,omitempty"`
	CompanyId        int64               `protobuf:"varint,8,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderSendEventToAllRequestStruct) Reset() {
	*x = SenderSendEventToAllRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendEventToAllRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendEventToAllRequestStruct) ProtoMessage() {}

func (x *SenderSendEventToAllRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendEventToAllRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderSendEventToAllRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{6}
}

func (x *SenderSendEventToAllRequestStruct) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *SenderSendEventToAllRequestStruct) GetEventVersionList() []*EventVersionItem {
	if x != nil {
		return x.EventVersionList
	}
	return nil
}

func (x *SenderSendEventToAllRequestStruct) GetPushData() string {
	if x != nil {
		return x.PushData
	}
	return ""
}

func (x *SenderSendEventToAllRequestStruct) GetWsUsers() string {
	if x != nil {
		return x.WsUsers
	}
	return ""
}

func (x *SenderSendEventToAllRequestStruct) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SenderSendEventToAllRequestStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *SenderSendEventToAllRequestStruct) GetIsNeedPush() int64 {
	if x != nil {
		return x.IsNeedPush
	}
	return 0
}

func (x *SenderSendEventToAllRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.SendEventToAll
type SenderSendEventToAllResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderSendEventToAllResponseStruct) Reset() {
	*x = SenderSendEventToAllResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendEventToAllResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendEventToAllResponseStruct) ProtoMessage() {}

func (x *SenderSendEventToAllResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendEventToAllResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderSendEventToAllResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{7}
}

// формат запроса для Sender.GetOnlineConnectionsByUserId
type SenderGetOnlineConnectionsByUserIdRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CompanyId int64 `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderGetOnlineConnectionsByUserIdRequestStruct) Reset() {
	*x = SenderGetOnlineConnectionsByUserIdRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderGetOnlineConnectionsByUserIdRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderGetOnlineConnectionsByUserIdRequestStruct) ProtoMessage() {}

func (x *SenderGetOnlineConnectionsByUserIdRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderGetOnlineConnectionsByUserIdRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderGetOnlineConnectionsByUserIdRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{8}
}

func (x *SenderGetOnlineConnectionsByUserIdRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SenderGetOnlineConnectionsByUserIdRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type ConnectionInfoStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderNodeId int64  `protobuf:"varint,1,opt,name=sender_node_id,json=senderNodeId,proto3" json:"sender_node_id,omitempty"`
	ConnectionId int64  `protobuf:"varint,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	UserId       int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IpAddress    string `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	ConnectedAt  int64  `protobuf:"varint,5,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
	UserAgent    string `protobuf:"bytes,6,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Platform     string `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
	IsFocused    int64  `protobuf:"varint,8,opt,name=is_focused,json=isFocused,proto3" json:"is_focused,omitempty"`
}

func (x *ConnectionInfoStruct) Reset() {
	*x = ConnectionInfoStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionInfoStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfoStruct) ProtoMessage() {}

func (x *ConnectionInfoStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfoStruct.ProtoReflect.Descriptor instead.
func (*ConnectionInfoStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{9}
}

func (x *ConnectionInfoStruct) GetSenderNodeId() int64 {
	if x != nil {
		return x.SenderNodeId
	}
	return 0
}

func (x *ConnectionInfoStruct) GetConnectionId() int64 {
	if x != nil {
		return x.ConnectionId
	}
	return 0
}

func (x *ConnectionInfoStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ConnectionInfoStruct) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ConnectionInfoStruct) GetConnectedAt() int64 {
	if x != nil {
		return x.ConnectedAt
	}
	return 0
}

func (x *ConnectionInfoStruct) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ConnectionInfoStruct) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ConnectionInfoStruct) GetIsFocused() int64 {
	if x != nil {
		return x.IsFocused
	}
	return 0
}

// формат ответа для Sender.GetOnlineConnectionsByUserId
type SenderGetOnlineConnectionsByUserIdResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineConnectionList []*ConnectionInfoStruct `protobuf:"bytes,1,rep,name=online_connection_list,json=onlineConnectionList,proto3" json:"online_connection_list,omitempty"`
}

func (x *SenderGetOnlineConnectionsByUserIdResponseStruct) Reset() {
	*x = SenderGetOnlineConnectionsByUserIdResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderGetOnlineConnectionsByUserIdResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderGetOnlineConnectionsByUserIdResponseStruct) ProtoMessage() {}

func (x *SenderGetOnlineConnectionsByUserIdResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderGetOnlineConnectionsByUserIdResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderGetOnlineConnectionsByUserIdResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{10}
}

func (x *SenderGetOnlineConnectionsByUserIdResponseStruct) GetOnlineConnectionList() []*ConnectionInfoStruct {
	if x != nil {
		return x.OnlineConnectionList
	}
	return nil
}

// формат запроса для Sender.CloseConnectionsByUserId
type SenderCloseConnectionsByUserIdRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CompanyId int64 `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderCloseConnectionsByUserIdRequestStruct) Reset() {
	*x = SenderCloseConnectionsByUserIdRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderCloseConnectionsByUserIdRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderCloseConnectionsByUserIdRequestStruct) ProtoMessage() {}

func (x *SenderCloseConnectionsByUserIdRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderCloseConnectionsByUserIdRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderCloseConnectionsByUserIdRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{11}
}

func (x *SenderCloseConnectionsByUserIdRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SenderCloseConnectionsByUserIdRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.CloseConnectionsByUserId
type SenderCloseConnectionsByUserIdResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderCloseConnectionsByUserIdResponseStruct) Reset() {
	*x = SenderCloseConnectionsByUserIdResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderCloseConnectionsByUserIdResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderCloseConnectionsByUserIdResponseStruct) ProtoMessage() {}

func (x *SenderCloseConnectionsByUserIdResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderCloseConnectionsByUserIdResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderCloseConnectionsByUserIdResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{12}
}

// формат запроса для Sender.AddTaskPushNotification
type SenderAddTaskPushNotificationRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList  []int64 `protobuf:"varint,1,rep,packed,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	PushData  string  `protobuf:"bytes,2,opt,name=push_data,json=pushData,proto3" json:"push_data,omitempty"`
	Uuid      string  `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CompanyId int64   `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderAddTaskPushNotificationRequestStruct) Reset() {
	*x = SenderAddTaskPushNotificationRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderAddTaskPushNotificationRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderAddTaskPushNotificationRequestStruct) ProtoMessage() {}

func (x *SenderAddTaskPushNotificationRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderAddTaskPushNotificationRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderAddTaskPushNotificationRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{13}
}

func (x *SenderAddTaskPushNotificationRequestStruct) GetUserList() []int64 {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *SenderAddTaskPushNotificationRequestStruct) GetPushData() string {
	if x != nil {
		return x.PushData
	}
	return ""
}

func (x *SenderAddTaskPushNotificationRequestStruct) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SenderAddTaskPushNotificationRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.AddTaskPushNotification
type SenderAddTaskPushNotificationResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderAddTaskPushNotificationResponseStruct) Reset() {
	*x = SenderAddTaskPushNotificationResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderAddTaskPushNotificationResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderAddTaskPushNotificationResponseStruct) ProtoMessage() {}

func (x *SenderAddTaskPushNotificationResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderAddTaskPushNotificationResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderAddTaskPushNotificationResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{14}
}

// формат запроса для Sender.SenderGetOnlineUsersRequestStruct
type SenderGetOnlineUsersRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList  []int64 `protobuf:"varint,1,rep,packed,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	CompanyId int64   `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderGetOnlineUsersRequestStruct) Reset() {
	*x = SenderGetOnlineUsersRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderGetOnlineUsersRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderGetOnlineUsersRequestStruct) ProtoMessage() {}

func (x *SenderGetOnlineUsersRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderGetOnlineUsersRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderGetOnlineUsersRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{15}
}

func (x *SenderGetOnlineUsersRequestStruct) GetUserList() []int64 {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *SenderGetOnlineUsersRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.GetOnlineUsers
type SenderGetOnlineUsersResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineUserList  []int64 `protobuf:"varint,1,rep,packed,name=online_user_list,json=onlineUserList,proto3" json:"online_user_list,omitempty"`
	OfflineUserList []int64 `protobuf:"varint,2,rep,packed,name=offline_user_list,json=offlineUserList,proto3" json:"offline_user_list,omitempty"`
}

func (x *SenderGetOnlineUsersResponseStruct) Reset() {
	*x = SenderGetOnlineUsersResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderGetOnlineUsersResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderGetOnlineUsersResponseStruct) ProtoMessage() {}

func (x *SenderGetOnlineUsersResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderGetOnlineUsersResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderGetOnlineUsersResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{16}
}

func (x *SenderGetOnlineUsersResponseStruct) GetOnlineUserList() []int64 {
	if x != nil {
		return x.OnlineUserList
	}
	return nil
}

func (x *SenderGetOnlineUsersResponseStruct) GetOfflineUserList() []int64 {
	if x != nil {
		return x.OfflineUserList
	}
	return nil
}

// формат запроса для Sender.AddUsersToThread
type SenderAddUsersToThreadRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadKey  string  `protobuf:"bytes,1,opt,name=thread_key,json=threadKey,proto3" json:"thread_key,omitempty"`
	UserList   []int64 `protobuf:"varint,2,rep,packed,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	RoutineKey string  `protobuf:"bytes,3,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	CompanyId  int64   `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderAddUsersToThreadRequestStruct) Reset() {
	*x = SenderAddUsersToThreadRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderAddUsersToThreadRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderAddUsersToThreadRequestStruct) ProtoMessage() {}

func (x *SenderAddUsersToThreadRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderAddUsersToThreadRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderAddUsersToThreadRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{17}
}

func (x *SenderAddUsersToThreadRequestStruct) GetThreadKey() string {
	if x != nil {
		return x.ThreadKey
	}
	return ""
}

func (x *SenderAddUsersToThreadRequestStruct) GetUserList() []int64 {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *SenderAddUsersToThreadRequestStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *SenderAddUsersToThreadRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.AddUsersToThread
type SenderAddUsersToThreadResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderAddUsersToThreadResponseStruct) Reset() {
	*x = SenderAddUsersToThreadResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderAddUsersToThreadResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderAddUsersToThreadResponseStruct) ProtoMessage() {}

func (x *SenderAddUsersToThreadResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderAddUsersToThreadResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderAddUsersToThreadResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{18}
}

// формат запроса для Sender.SendTypingEvent
type SenderSendTypingEventRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList         []int64             `protobuf:"varint,1,rep,packed,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	Event            string              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	EventVersionList []*EventVersionItem `protobuf:"bytes,3,rep,name=event_version_list,json=eventVersionList,proto3" json:"event_version_list,omitempty"`
	RoutineKey       string              `protobuf:"bytes,4,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	CompanyId        int64               `protobuf:"varint,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderSendTypingEventRequestStruct) Reset() {
	*x = SenderSendTypingEventRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendTypingEventRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendTypingEventRequestStruct) ProtoMessage() {}

func (x *SenderSendTypingEventRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendTypingEventRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderSendTypingEventRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{19}
}

func (x *SenderSendTypingEventRequestStruct) GetUserList() []int64 {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *SenderSendTypingEventRequestStruct) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *SenderSendTypingEventRequestStruct) GetEventVersionList() []*EventVersionItem {
	if x != nil {
		return x.EventVersionList
	}
	return nil
}

func (x *SenderSendTypingEventRequestStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *SenderSendTypingEventRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.SendTypingEvent
type SenderSendTypingEventResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderSendTypingEventResponseStruct) Reset() {
	*x = SenderSendTypingEventResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendTypingEventResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendTypingEventResponseStruct) ProtoMessage() {}

func (x *SenderSendTypingEventResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendTypingEventResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderSendTypingEventResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{20}
}

// формат запроса для Sender.SendThreadTypingEvent
type SenderSendThreadTypingEventRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList         []int64             `protobuf:"varint,1,rep,packed,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	Event            string              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	EventVersionList []*EventVersionItem `protobuf:"bytes,3,rep,name=event_version_list,json=eventVersionList,proto3" json:"event_version_list,omitempty"`
	CompanyId        int64               `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderSendThreadTypingEventRequestStruct) Reset() {
	*x = SenderSendThreadTypingEventRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendThreadTypingEventRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendThreadTypingEventRequestStruct) ProtoMessage() {}

func (x *SenderSendThreadTypingEventRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendThreadTypingEventRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderSendThreadTypingEventRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{21}
}

func (x *SenderSendThreadTypingEventRequestStruct) GetUserList() []int64 {
	if x != nil {
		return x.UserList
	}
	return nil
}

func (x *SenderSendThreadTypingEventRequestStruct) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *SenderSendThreadTypingEventRequestStruct) GetEventVersionList() []*EventVersionItem {
	if x != nil {
		return x.EventVersionList
	}
	return nil
}

func (x *SenderSendThreadTypingEventRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.SendThreadTypingEvent
type SenderSendThreadTypingEventResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderSendThreadTypingEventResponseStruct) Reset() {
	*x = SenderSendThreadTypingEventResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendThreadTypingEventResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendThreadTypingEventResponseStruct) ProtoMessage() {}

func (x *SenderSendThreadTypingEventResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendThreadTypingEventResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderSendThreadTypingEventResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{22}
}

// формат запроса для Sender.SendVoIP
type SenderSendVoIPRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PushData   string `protobuf:"bytes,2,opt,name=push_data,json=pushData,proto3" json:"push_data,omitempty"`
	Uuid       string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TimeToLive int64  `protobuf:"varint,4,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"`
	RoutineKey string `protobuf:"bytes,5,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	CompanyId  int64  `protobuf:"varint,6,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderSendVoIPRequestStruct) Reset() {
	*x = SenderSendVoIPRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendVoIPRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendVoIPRequestStruct) ProtoMessage() {}

func (x *SenderSendVoIPRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendVoIPRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderSendVoIPRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{23}
}

func (x *SenderSendVoIPRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SenderSendVoIPRequestStruct) GetPushData() string {
	if x != nil {
		return x.PushData
	}
	return ""
}

func (x *SenderSendVoIPRequestStruct) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SenderSendVoIPRequestStruct) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *SenderSendVoIPRequestStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *SenderSendVoIPRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.SendVoIP
type SenderSendVoIPResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderSendVoIPResponseStruct) Reset() {
	*x = SenderSendVoIPResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendVoIPResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendVoIPResponseStruct) ProtoMessage() {}

func (x *SenderSendVoIPResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendVoIPResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderSendVoIPResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{24}
}

// формат запроса для Sender.SendIncomingCall
type SenderSendIncomingCallRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventVersionList []*EventVersionItem `protobuf:"bytes,2,rep,name=event_version_list,json=eventVersionList,proto3" json:"event_version_list,omitempty"`
	PushData         string              `protobuf:"bytes,3,opt,name=push_data,json=pushData,proto3" json:"push_data,omitempty"`
	WsUsers          string              `protobuf:"bytes,4,opt,name=ws_users,json=wsUsers,proto3" json:"ws_users,omitempty"`
	Uuid             string              `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TimeToLive       int64               `protobuf:"varint,6,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"`
	RoutineKey       string              `protobuf:"bytes,7,opt,name=routine_key,json=routineKey,proto3" json:"routine_key,omitempty"`
	CompanyId        int64               `protobuf:"varint,8,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *SenderSendIncomingCallRequestStruct) Reset() {
	*x = SenderSendIncomingCallRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendIncomingCallRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendIncomingCallRequestStruct) ProtoMessage() {}

func (x *SenderSendIncomingCallRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendIncomingCallRequestStruct.ProtoReflect.Descriptor instead.
func (*SenderSendIncomingCallRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{25}
}

func (x *SenderSendIncomingCallRequestStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SenderSendIncomingCallRequestStruct) GetEventVersionList() []*EventVersionItem {
	if x != nil {
		return x.EventVersionList
	}
	return nil
}

func (x *SenderSendIncomingCallRequestStruct) GetPushData() string {
	if x != nil {
		return x.PushData
	}
	return ""
}

func (x *SenderSendIncomingCallRequestStruct) GetWsUsers() string {
	if x != nil {
		return x.WsUsers
	}
	return ""
}

func (x *SenderSendIncomingCallRequestStruct) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SenderSendIncomingCallRequestStruct) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *SenderSendIncomingCallRequestStruct) GetRoutineKey() string {
	if x != nil {
		return x.RoutineKey
	}
	return ""
}

func (x *SenderSendIncomingCallRequestStruct) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// формат ответа для Sender.SendIncomingCall
type SenderSendIncomingCallResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SenderSendIncomingCallResponseStruct) Reset() {
	*x = SenderSendIncomingCallResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderSendIncomingCallResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderSendIncomingCallResponseStruct) ProtoMessage() {}

func (x *SenderSendIncomingCallResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderSendIncomingCallResponseStruct.ProtoReflect.Descriptor instead.
func (*SenderSendIncomingCallResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{26}
}

// формат запроса для system.status
type SystemStatusRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemStatusRequestStruct) Reset() {
	*x = SystemStatusRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusRequestStruct) ProtoMessage() {}

func (x *SystemStatusRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{27}
}

// формат ответа для system.status
type SystemStatusResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Goroutines int64  `protobuf:"varint,2,opt,name=goroutines,proto3" json:"goroutines,omitempty"`
	Memory     int64  `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryKb   string `protobuf:"bytes,4,opt,name=memory_kb,json=memoryKb,proto3" json:"memory_kb,omitempty"`
	MemoryMb   string `protobuf:"bytes,5,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Uptime     int32  `protobuf:"varint,6,opt,name=uptime,proto3" json:"uptime,omitempty"`
}

func (x *SystemStatusResponseStruct) Reset() {
	*x = SystemStatusResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatusResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusResponseStruct) ProtoMessage() {}

func (x *SystemStatusResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemStatusResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{28}
}

func (x *SystemStatusResponseStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetGoroutines() int64 {
	if x != nil {
		return x.Goroutines
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SystemStatusResponseStruct) GetMemoryKb() string {
	if x != nil {
		return x.MemoryKb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetMemoryMb() string {
	if x != nil {
		return x.MemoryMb
	}
	return ""
}

func (x *SystemStatusResponseStruct) GetUptime() int32 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

// формат запроса для system.traceGoroutine
type SystemTraceGoroutineRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineRequestStruct) Reset() {
	*x = SystemTraceGoroutineRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineRequestStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{29}
}

// формат ответа для system.traceGoroutine
type SystemTraceGoroutineResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceGoroutineResponseStruct) Reset() {
	*x = SystemTraceGoroutineResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceGoroutineResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceGoroutineResponseStruct) ProtoMessage() {}

func (x *SystemTraceGoroutineResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceGoroutineResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceGoroutineResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{30}
}

// формат запроса для system.traceMemory
type SystemTraceMemoryRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryRequestStruct) Reset() {
	*x = SystemTraceMemoryRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryRequestStruct) ProtoMessage() {}

func (x *SystemTraceMemoryRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{31}
}

// формат ответа для system.traceMemory
type SystemTraceMemoryResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemTraceMemoryResponseStruct) Reset() {
	*x = SystemTraceMemoryResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTraceMemoryResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTraceMemoryResponseStruct) ProtoMessage() {}

func (x *SystemTraceMemoryResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTraceMemoryResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemTraceMemoryResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{32}
}

// формат запроса для system.cpuProfile
type SystemCpuProfileRequestStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SystemCpuProfileRequestStruct) Reset() {
	*x = SystemCpuProfileRequestStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileRequestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileRequestStruct) ProtoMessage() {}

func (x *SystemCpuProfileRequestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileRequestStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileRequestStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{33}
}

func (x *SystemCpuProfileRequestStruct) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// формат ответа для system.cpuProfile
type SystemCpuProfileResponseStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemCpuProfileResponseStruct) Reset() {
	*x = SystemCpuProfileResponseStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_go_pivot_sender_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCpuProfileResponseStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCpuProfileResponseStruct) ProtoMessage() {}

func (x *SystemCpuProfileResponseStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_go_pivot_sender_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCpuProfileResponseStruct.ProtoReflect.Descriptor instead.
func (*SystemCpuProfileResponseStruct) Descriptor() ([]byte, []int) {
	return file_proto_go_pivot_sender_proto_rawDescGZIP(), []int{34}
}

var File_proto_go_pivot_sender_proto protoreflect.FileDescriptor

var file_proto_go_pivot_sender_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70,
	0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x22, 0xbc,
	0x01, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x32, 0x0a,
	0x1c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x22, 0x6f, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x50, 0x75,
	0x73, 0x68, 0x22, 0x40, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xd0, 0x02, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xb8, 0x02, 0x0a, 0x21, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x73, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64,
	0x50, 0x75, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x69, 0x0a, 0x2f, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x22, 0x8f, 0x01,
	0x0a, 0x30, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x5b, 0x0a, 0x16, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x14, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x65, 0x0a, 0x2b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x2c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x2a, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x22, 0x2d, 0x0a, 0x2b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x5f, 0x0a, 0x21, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x22, 0x7a, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x6f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa1,
	0x01, 0x0a, 0x23, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x54, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x22, 0x26, 0x0a, 0x24, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x22, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x23, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xcd, 0x01, 0x0a,
	0x28, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x12,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x29,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x1b, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x56, 0x6f, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xbd, 0x02, 0x0a, 0x23, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x73, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x24, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x1b, 0x0a,
	0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x1a, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x67, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x6b, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x4b, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x62, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x24, 0x0a, 0x22,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x33, 0x0a, 0x1d, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x32, 0xe9,
	0x10, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x0e, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x2e, 0x70, 0x69,
	0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x69, 0x76, 0x6f,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e,
	0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2e, 0x2e, 0x70,
	0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x81,
	0x01, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x32, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x69,
	0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x00, 0x12, 0xab, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x2e, 0x70, 0x69, 0x76, 0x6f,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x41, 0x2e, 0x70, 0x69,
	0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x12, 0x9f, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x3c, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x3d, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x3c, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x2e, 0x70, 0x69, 0x76,
	0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x33,
	0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x34, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x54, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12,
	0x84, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x70, 0x69, 0x76, 0x6f,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x34,
	0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12,
	0x6f, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x49,
	0x50, 0x12, 0x2c, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f,
	0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a,
	0x2d, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x49, 0x50,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x12, 0x87, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x34, 0x2e, 0x70, 0x69,
	0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x1a, 0x35, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0c, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x76,
	0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x32,
	0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x47, 0x6f, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x11, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2f,
	0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a,
	0x30, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x43, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_go_pivot_sender_proto_rawDescOnce sync.Once
	file_proto_go_pivot_sender_proto_rawDescData = file_proto_go_pivot_sender_proto_rawDesc
)

func file_proto_go_pivot_sender_proto_rawDescGZIP() []byte {
	file_proto_go_pivot_sender_proto_rawDescOnce.Do(func() {
		file_proto_go_pivot_sender_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_go_pivot_sender_proto_rawDescData)
	})
	return file_proto_go_pivot_sender_proto_rawDescData
}

var file_proto_go_pivot_sender_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_proto_go_pivot_sender_proto_goTypes = []interface{}{
	(*SenderSetTokenRequestStruct)(nil),                      // 0: pivotSenderGrpc.SenderSetTokenRequestStruct
	(*SenderSetTokenResponseStruct)(nil),                     // 1: pivotSenderGrpc.SenderSetTokenResponseStruct
	(*EventUserStruct)(nil),                                  // 2: pivotSenderGrpc.EventUserStruct
	(*EventVersionItem)(nil),                                 // 3: pivotSenderGrpc.EventVersionItem
	(*SenderSendEventRequestStruct)(nil),                     // 4: pivotSenderGrpc.SenderSendEventRequestStruct
	(*SenderSendEventResponseStruct)(nil),                    // 5: pivotSenderGrpc.SenderSendEventResponseStruct
	(*SenderSendEventToAllRequestStruct)(nil),                // 6: pivotSenderGrpc.SenderSendEventToAllRequestStruct
	(*SenderSendEventToAllResponseStruct)(nil),               // 7: pivotSenderGrpc.SenderSendEventToAllResponseStruct
	(*SenderGetOnlineConnectionsByUserIdRequestStruct)(nil),  // 8: pivotSenderGrpc.SenderGetOnlineConnectionsByUserIdRequestStruct
	(*ConnectionInfoStruct)(nil),                             // 9: pivotSenderGrpc.ConnectionInfoStruct
	(*SenderGetOnlineConnectionsByUserIdResponseStruct)(nil), // 10: pivotSenderGrpc.SenderGetOnlineConnectionsByUserIdResponseStruct
	(*SenderCloseConnectionsByUserIdRequestStruct)(nil),      // 11: pivotSenderGrpc.SenderCloseConnectionsByUserIdRequestStruct
	(*SenderCloseConnectionsByUserIdResponseStruct)(nil),     // 12: pivotSenderGrpc.SenderCloseConnectionsByUserIdResponseStruct
	(*SenderAddTaskPushNotificationRequestStruct)(nil),       // 13: pivotSenderGrpc.SenderAddTaskPushNotificationRequestStruct
	(*SenderAddTaskPushNotificationResponseStruct)(nil),      // 14: pivotSenderGrpc.SenderAddTaskPushNotificationResponseStruct
	(*SenderGetOnlineUsersRequestStruct)(nil),                // 15: pivotSenderGrpc.SenderGetOnlineUsersRequestStruct
	(*SenderGetOnlineUsersResponseStruct)(nil),               // 16: pivotSenderGrpc.SenderGetOnlineUsersResponseStruct
	(*SenderAddUsersToThreadRequestStruct)(nil),              // 17: pivotSenderGrpc.SenderAddUsersToThreadRequestStruct
	(*SenderAddUsersToThreadResponseStruct)(nil),             // 18: pivotSenderGrpc.SenderAddUsersToThreadResponseStruct
	(*SenderSendTypingEventRequestStruct)(nil),               // 19: pivotSenderGrpc.SenderSendTypingEventRequestStruct
	(*SenderSendTypingEventResponseStruct)(nil),              // 20: pivotSenderGrpc.SenderSendTypingEventResponseStruct
	(*SenderSendThreadTypingEventRequestStruct)(nil),         // 21: pivotSenderGrpc.SenderSendThreadTypingEventRequestStruct
	(*SenderSendThreadTypingEventResponseStruct)(nil),        // 22: pivotSenderGrpc.SenderSendThreadTypingEventResponseStruct
	(*SenderSendVoIPRequestStruct)(nil),                      // 23: pivotSenderGrpc.SenderSendVoIPRequestStruct
	(*SenderSendVoIPResponseStruct)(nil),                     // 24: pivotSenderGrpc.SenderSendVoIPResponseStruct
	(*SenderSendIncomingCallRequestStruct)(nil),              // 25: pivotSenderGrpc.SenderSendIncomingCallRequestStruct
	(*SenderSendIncomingCallResponseStruct)(nil),             // 26: pivotSenderGrpc.SenderSendIncomingCallResponseStruct
	(*SystemStatusRequestStruct)(nil),                        // 27: pivotSenderGrpc.SystemStatusRequestStruct
	(*SystemStatusResponseStruct)(nil),                       // 28: pivotSenderGrpc.SystemStatusResponseStruct
	(*SystemTraceGoroutineRequestStruct)(nil),                // 29: pivotSenderGrpc.SystemTraceGoroutineRequestStruct
	(*SystemTraceGoroutineResponseStruct)(nil),               // 30: pivotSenderGrpc.SystemTraceGoroutineResponseStruct
	(*SystemTraceMemoryRequestStruct)(nil),                   // 31: pivotSenderGrpc.SystemTraceMemoryRequestStruct
	(*SystemTraceMemoryResponseStruct)(nil),                  // 32: pivotSenderGrpc.SystemTraceMemoryResponseStruct
	(*SystemCpuProfileRequestStruct)(nil),                    // 33: pivotSenderGrpc.SystemCpuProfileRequestStruct
	(*SystemCpuProfileResponseStruct)(nil),                   // 34: pivotSenderGrpc.SystemCpuProfileResponseStruct
}
var file_proto_go_pivot_sender_proto_depIdxs = []int32{
	2,  // 0: pivotSenderGrpc.SenderSendEventRequestStruct.user_list:type_name -> pivotSenderGrpc.EventUserStruct
	3,  // 1: pivotSenderGrpc.SenderSendEventRequestStruct.event_version_list:type_name -> pivotSenderGrpc.EventVersionItem
	3,  // 2: pivotSenderGrpc.SenderSendEventToAllRequestStruct.event_version_list:type_name -> pivotSenderGrpc.EventVersionItem
	9,  // 3: pivotSenderGrpc.SenderGetOnlineConnectionsByUserIdResponseStruct.online_connection_list:type_name -> pivotSenderGrpc.ConnectionInfoStruct
	3,  // 4: pivotSenderGrpc.SenderSendTypingEventRequestStruct.event_version_list:type_name -> pivotSenderGrpc.EventVersionItem
	3,  // 5: pivotSenderGrpc.SenderSendThreadTypingEventRequestStruct.event_version_list:type_name -> pivotSenderGrpc.EventVersionItem
	3,  // 6: pivotSenderGrpc.SenderSendIncomingCallRequestStruct.event_version_list:type_name -> pivotSenderGrpc.EventVersionItem
	0,  // 7: pivotSenderGrpc.sender.SenderSetToken:input_type -> pivotSenderGrpc.SenderSetTokenRequestStruct
	4,  // 8: pivotSenderGrpc.sender.SenderSendEvent:input_type -> pivotSenderGrpc.SenderSendEventRequestStruct
	6,  // 9: pivotSenderGrpc.sender.SenderSendEventToAll:input_type -> pivotSenderGrpc.SenderSendEventToAllRequestStruct
	8,  // 10: pivotSenderGrpc.sender.SenderGetOnlineConnectionsByUserId:input_type -> pivotSenderGrpc.SenderGetOnlineConnectionsByUserIdRequestStruct
	11, // 11: pivotSenderGrpc.sender.SenderCloseConnectionsByUserId:input_type -> pivotSenderGrpc.SenderCloseConnectionsByUserIdRequestStruct
	13, // 12: pivotSenderGrpc.sender.SenderAddTaskPushNotification:input_type -> pivotSenderGrpc.SenderAddTaskPushNotificationRequestStruct
	15, // 13: pivotSenderGrpc.sender.SenderGetOnlineUsers:input_type -> pivotSenderGrpc.SenderGetOnlineUsersRequestStruct
	17, // 14: pivotSenderGrpc.sender.SenderAddUsersToThread:input_type -> pivotSenderGrpc.SenderAddUsersToThreadRequestStruct
	19, // 15: pivotSenderGrpc.sender.SenderSendTypingEvent:input_type -> pivotSenderGrpc.SenderSendTypingEventRequestStruct
	21, // 16: pivotSenderGrpc.sender.SenderSendThreadTypingEvent:input_type -> pivotSenderGrpc.SenderSendThreadTypingEventRequestStruct
	23, // 17: pivotSenderGrpc.sender.SenderSendVoIP:input_type -> pivotSenderGrpc.SenderSendVoIPRequestStruct
	25, // 18: pivotSenderGrpc.sender.SenderSendIncomingCall:input_type -> pivotSenderGrpc.SenderSendIncomingCallRequestStruct
	27, // 19: pivotSenderGrpc.sender.SystemStatus:input_type -> pivotSenderGrpc.SystemStatusRequestStruct
	29, // 20: pivotSenderGrpc.sender.SystemTraceGoroutine:input_type -> pivotSenderGrpc.SystemTraceGoroutineRequestStruct
	31, // 21: pivotSenderGrpc.sender.SystemTraceMemory:input_type -> pivotSenderGrpc.SystemTraceMemoryRequestStruct
	33, // 22: pivotSenderGrpc.sender.SystemCpuProfile:input_type -> pivotSenderGrpc.SystemCpuProfileRequestStruct
	1,  // 23: pivotSenderGrpc.sender.SenderSetToken:output_type -> pivotSenderGrpc.SenderSetTokenResponseStruct
	5,  // 24: pivotSenderGrpc.sender.SenderSendEvent:output_type -> pivotSenderGrpc.SenderSendEventResponseStruct
	7,  // 25: pivotSenderGrpc.sender.SenderSendEventToAll:output_type -> pivotSenderGrpc.SenderSendEventToAllResponseStruct
	10, // 26: pivotSenderGrpc.sender.SenderGetOnlineConnectionsByUserId:output_type -> pivotSenderGrpc.SenderGetOnlineConnectionsByUserIdResponseStruct
	12, // 27: pivotSenderGrpc.sender.SenderCloseConnectionsByUserId:output_type -> pivotSenderGrpc.SenderCloseConnectionsByUserIdResponseStruct
	14, // 28: pivotSenderGrpc.sender.SenderAddTaskPushNotification:output_type -> pivotSenderGrpc.SenderAddTaskPushNotificationResponseStruct
	16, // 29: pivotSenderGrpc.sender.SenderGetOnlineUsers:output_type -> pivotSenderGrpc.SenderGetOnlineUsersResponseStruct
	18, // 30: pivotSenderGrpc.sender.SenderAddUsersToThread:output_type -> pivotSenderGrpc.SenderAddUsersToThreadResponseStruct
	20, // 31: pivotSenderGrpc.sender.SenderSendTypingEvent:output_type -> pivotSenderGrpc.SenderSendTypingEventResponseStruct
	22, // 32: pivotSenderGrpc.sender.SenderSendThreadTypingEvent:output_type -> pivotSenderGrpc.SenderSendThreadTypingEventResponseStruct
	24, // 33: pivotSenderGrpc.sender.SenderSendVoIP:output_type -> pivotSenderGrpc.SenderSendVoIPResponseStruct
	26, // 34: pivotSenderGrpc.sender.SenderSendIncomingCall:output_type -> pivotSenderGrpc.SenderSendIncomingCallResponseStruct
	28, // 35: pivotSenderGrpc.sender.SystemStatus:output_type -> pivotSenderGrpc.SystemStatusResponseStruct
	30, // 36: pivotSenderGrpc.sender.SystemTraceGoroutine:output_type -> pivotSenderGrpc.SystemTraceGoroutineResponseStruct
	32, // 37: pivotSenderGrpc.sender.SystemTraceMemory:output_type -> pivotSenderGrpc.SystemTraceMemoryResponseStruct
	34, // 38: pivotSenderGrpc.sender.SystemCpuProfile:output_type -> pivotSenderGrpc.SystemCpuProfileResponseStruct
	23, // [23:39] is the sub-list for method output_type
	7,  // [7:23] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_go_pivot_sender_proto_init() }
func file_proto_go_pivot_sender_proto_init() {
	if File_proto_go_pivot_sender_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_go_pivot_sender_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSetTokenRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSetTokenResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUserStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventVersionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendEventRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendEventResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendEventToAllRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendEventToAllResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderGetOnlineConnectionsByUserIdRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionInfoStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderGetOnlineConnectionsByUserIdResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderCloseConnectionsByUserIdRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderCloseConnectionsByUserIdResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderAddTaskPushNotificationRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderAddTaskPushNotificationResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderGetOnlineUsersRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderGetOnlineUsersResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderAddUsersToThreadRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderAddUsersToThreadResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendTypingEventRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendTypingEventResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendThreadTypingEventRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendThreadTypingEventResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendVoIPRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendVoIPResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendIncomingCallRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderSendIncomingCallResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemStatusResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceGoroutineResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTraceMemoryResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileRequestStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_go_pivot_sender_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCpuProfileResponseStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_go_pivot_sender_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_go_pivot_sender_proto_goTypes,
		DependencyIndexes: file_proto_go_pivot_sender_proto_depIdxs,
		MessageInfos:      file_proto_go_pivot_sender_proto_msgTypes,
	}.Build()
	File_proto_go_pivot_sender_proto = out.File
	file_proto_go_pivot_sender_proto_rawDesc = nil
	file_proto_go_pivot_sender_proto_goTypes = nil
	file_proto_go_pivot_sender_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SenderClient is the client API for Sender service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SenderClient interface {
	SenderSetToken(ctx context.Context, in *SenderSetTokenRequestStruct, opts ...grpc.CallOption) (*SenderSetTokenResponseStruct, error)
	SenderSendEvent(ctx context.Context, in *SenderSendEventRequestStruct, opts ...grpc.CallOption) (*SenderSendEventResponseStruct, error)
	SenderSendEventToAll(ctx context.Context, in *SenderSendEventToAllRequestStruct, opts ...grpc.CallOption) (*SenderSendEventToAllResponseStruct, error)
	SenderGetOnlineConnectionsByUserId(ctx context.Context, in *SenderGetOnlineConnectionsByUserIdRequestStruct, opts ...grpc.CallOption) (*SenderGetOnlineConnectionsByUserIdResponseStruct, error)
	SenderCloseConnectionsByUserId(ctx context.Context, in *SenderCloseConnectionsByUserIdRequestStruct, opts ...grpc.CallOption) (*SenderCloseConnectionsByUserIdResponseStruct, error)
	SenderAddTaskPushNotification(ctx context.Context, in *SenderAddTaskPushNotificationRequestStruct, opts ...grpc.CallOption) (*SenderAddTaskPushNotificationResponseStruct, error)
	SenderGetOnlineUsers(ctx context.Context, in *SenderGetOnlineUsersRequestStruct, opts ...grpc.CallOption) (*SenderGetOnlineUsersResponseStruct, error)
	SenderAddUsersToThread(ctx context.Context, in *SenderAddUsersToThreadRequestStruct, opts ...grpc.CallOption) (*SenderAddUsersToThreadResponseStruct, error)
	SenderSendTypingEvent(ctx context.Context, in *SenderSendTypingEventRequestStruct, opts ...grpc.CallOption) (*SenderSendTypingEventResponseStruct, error)
	SenderSendThreadTypingEvent(ctx context.Context, in *SenderSendThreadTypingEventRequestStruct, opts ...grpc.CallOption) (*SenderSendThreadTypingEventResponseStruct, error)
	SenderSendVoIP(ctx context.Context, in *SenderSendVoIPRequestStruct, opts ...grpc.CallOption) (*SenderSendVoIPResponseStruct, error)
	SenderSendIncomingCall(ctx context.Context, in *SenderSendIncomingCallRequestStruct, opts ...grpc.CallOption) (*SenderSendIncomingCallResponseStruct, error)
	SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error)
}

type senderClient struct {
	cc grpc.ClientConnInterface
}

func NewSenderClient(cc grpc.ClientConnInterface) SenderClient {
	return &senderClient{cc}
}

func (c *senderClient) SenderSetToken(ctx context.Context, in *SenderSetTokenRequestStruct, opts ...grpc.CallOption) (*SenderSetTokenResponseStruct, error) {
	out := new(SenderSetTokenResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderSetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderSendEvent(ctx context.Context, in *SenderSendEventRequestStruct, opts ...grpc.CallOption) (*SenderSendEventResponseStruct, error) {
	out := new(SenderSendEventResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderSendEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderSendEventToAll(ctx context.Context, in *SenderSendEventToAllRequestStruct, opts ...grpc.CallOption) (*SenderSendEventToAllResponseStruct, error) {
	out := new(SenderSendEventToAllResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderSendEventToAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderGetOnlineConnectionsByUserId(ctx context.Context, in *SenderGetOnlineConnectionsByUserIdRequestStruct, opts ...grpc.CallOption) (*SenderGetOnlineConnectionsByUserIdResponseStruct, error) {
	out := new(SenderGetOnlineConnectionsByUserIdResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderGetOnlineConnectionsByUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderCloseConnectionsByUserId(ctx context.Context, in *SenderCloseConnectionsByUserIdRequestStruct, opts ...grpc.CallOption) (*SenderCloseConnectionsByUserIdResponseStruct, error) {
	out := new(SenderCloseConnectionsByUserIdResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderCloseConnectionsByUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderAddTaskPushNotification(ctx context.Context, in *SenderAddTaskPushNotificationRequestStruct, opts ...grpc.CallOption) (*SenderAddTaskPushNotificationResponseStruct, error) {
	out := new(SenderAddTaskPushNotificationResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderAddTaskPushNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderGetOnlineUsers(ctx context.Context, in *SenderGetOnlineUsersRequestStruct, opts ...grpc.CallOption) (*SenderGetOnlineUsersResponseStruct, error) {
	out := new(SenderGetOnlineUsersResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderGetOnlineUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderAddUsersToThread(ctx context.Context, in *SenderAddUsersToThreadRequestStruct, opts ...grpc.CallOption) (*SenderAddUsersToThreadResponseStruct, error) {
	out := new(SenderAddUsersToThreadResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderAddUsersToThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderSendTypingEvent(ctx context.Context, in *SenderSendTypingEventRequestStruct, opts ...grpc.CallOption) (*SenderSendTypingEventResponseStruct, error) {
	out := new(SenderSendTypingEventResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderSendTypingEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderSendThreadTypingEvent(ctx context.Context, in *SenderSendThreadTypingEventRequestStruct, opts ...grpc.CallOption) (*SenderSendThreadTypingEventResponseStruct, error) {
	out := new(SenderSendThreadTypingEventResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderSendThreadTypingEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderSendVoIP(ctx context.Context, in *SenderSendVoIPRequestStruct, opts ...grpc.CallOption) (*SenderSendVoIPResponseStruct, error) {
	out := new(SenderSendVoIPResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderSendVoIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SenderSendIncomingCall(ctx context.Context, in *SenderSendIncomingCallRequestStruct, opts ...grpc.CallOption) (*SenderSendIncomingCallResponseStruct, error) {
	out := new(SenderSendIncomingCallResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SenderSendIncomingCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SystemStatus(ctx context.Context, in *SystemStatusRequestStruct, opts ...grpc.CallOption) (*SystemStatusResponseStruct, error) {
	out := new(SystemStatusResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SystemStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SystemTraceGoroutine(ctx context.Context, in *SystemTraceGoroutineRequestStruct, opts ...grpc.CallOption) (*SystemTraceGoroutineResponseStruct, error) {
	out := new(SystemTraceGoroutineResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SystemTraceGoroutine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SystemTraceMemory(ctx context.Context, in *SystemTraceMemoryRequestStruct, opts ...grpc.CallOption) (*SystemTraceMemoryResponseStruct, error) {
	out := new(SystemTraceMemoryResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SystemTraceMemory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SystemCpuProfile(ctx context.Context, in *SystemCpuProfileRequestStruct, opts ...grpc.CallOption) (*SystemCpuProfileResponseStruct, error) {
	out := new(SystemCpuProfileResponseStruct)
	err := c.cc.Invoke(ctx, "/pivotSenderGrpc.sender/SystemCpuProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SenderServer is the server API for Sender service.
type SenderServer interface {
	SenderSetToken(context.Context, *SenderSetTokenRequestStruct) (*SenderSetTokenResponseStruct, error)
	SenderSendEvent(context.Context, *SenderSendEventRequestStruct) (*SenderSendEventResponseStruct, error)
	SenderSendEventToAll(context.Context, *SenderSendEventToAllRequestStruct) (*SenderSendEventToAllResponseStruct, error)
	SenderGetOnlineConnectionsByUserId(context.Context, *SenderGetOnlineConnectionsByUserIdRequestStruct) (*SenderGetOnlineConnectionsByUserIdResponseStruct, error)
	SenderCloseConnectionsByUserId(context.Context, *SenderCloseConnectionsByUserIdRequestStruct) (*SenderCloseConnectionsByUserIdResponseStruct, error)
	SenderAddTaskPushNotification(context.Context, *SenderAddTaskPushNotificationRequestStruct) (*SenderAddTaskPushNotificationResponseStruct, error)
	SenderGetOnlineUsers(context.Context, *SenderGetOnlineUsersRequestStruct) (*SenderGetOnlineUsersResponseStruct, error)
	SenderAddUsersToThread(context.Context, *SenderAddUsersToThreadRequestStruct) (*SenderAddUsersToThreadResponseStruct, error)
	SenderSendTypingEvent(context.Context, *SenderSendTypingEventRequestStruct) (*SenderSendTypingEventResponseStruct, error)
	SenderSendThreadTypingEvent(context.Context, *SenderSendThreadTypingEventRequestStruct) (*SenderSendThreadTypingEventResponseStruct, error)
	SenderSendVoIP(context.Context, *SenderSendVoIPRequestStruct) (*SenderSendVoIPResponseStruct, error)
	SenderSendIncomingCall(context.Context, *SenderSendIncomingCallRequestStruct) (*SenderSendIncomingCallResponseStruct, error)
	SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error)
	SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error)
	SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error)
	SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error)
}

// UnimplementedSenderServer can be embedded to have forward compatible implementations.
type UnimplementedSenderServer struct {
}

func (*UnimplementedSenderServer) SenderSetToken(context.Context, *SenderSetTokenRequestStruct) (*SenderSetTokenResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderSetToken not implemented")
}
func (*UnimplementedSenderServer) SenderSendEvent(context.Context, *SenderSendEventRequestStruct) (*SenderSendEventResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderSendEvent not implemented")
}
func (*UnimplementedSenderServer) SenderSendEventToAll(context.Context, *SenderSendEventToAllRequestStruct) (*SenderSendEventToAllResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderSendEventToAll not implemented")
}
func (*UnimplementedSenderServer) SenderGetOnlineConnectionsByUserId(context.Context, *SenderGetOnlineConnectionsByUserIdRequestStruct) (*SenderGetOnlineConnectionsByUserIdResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderGetOnlineConnectionsByUserId not implemented")
}
func (*UnimplementedSenderServer) SenderCloseConnectionsByUserId(context.Context, *SenderCloseConnectionsByUserIdRequestStruct) (*SenderCloseConnectionsByUserIdResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderCloseConnectionsByUserId not implemented")
}
func (*UnimplementedSenderServer) SenderAddTaskPushNotification(context.Context, *SenderAddTaskPushNotificationRequestStruct) (*SenderAddTaskPushNotificationResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderAddTaskPushNotification not implemented")
}
func (*UnimplementedSenderServer) SenderGetOnlineUsers(context.Context, *SenderGetOnlineUsersRequestStruct) (*SenderGetOnlineUsersResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderGetOnlineUsers not implemented")
}
func (*UnimplementedSenderServer) SenderAddUsersToThread(context.Context, *SenderAddUsersToThreadRequestStruct) (*SenderAddUsersToThreadResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderAddUsersToThread not implemented")
}
func (*UnimplementedSenderServer) SenderSendTypingEvent(context.Context, *SenderSendTypingEventRequestStruct) (*SenderSendTypingEventResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderSendTypingEvent not implemented")
}
func (*UnimplementedSenderServer) SenderSendThreadTypingEvent(context.Context, *SenderSendThreadTypingEventRequestStruct) (*SenderSendThreadTypingEventResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderSendThreadTypingEvent not implemented")
}
func (*UnimplementedSenderServer) SenderSendVoIP(context.Context, *SenderSendVoIPRequestStruct) (*SenderSendVoIPResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderSendVoIP not implemented")
}
func (*UnimplementedSenderServer) SenderSendIncomingCall(context.Context, *SenderSendIncomingCallRequestStruct) (*SenderSendIncomingCallResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SenderSendIncomingCall not implemented")
}
func (*UnimplementedSenderServer) SystemStatus(context.Context, *SystemStatusRequestStruct) (*SystemStatusResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemStatus not implemented")
}
func (*UnimplementedSenderServer) SystemTraceGoroutine(context.Context, *SystemTraceGoroutineRequestStruct) (*SystemTraceGoroutineResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceGoroutine not implemented")
}
func (*UnimplementedSenderServer) SystemTraceMemory(context.Context, *SystemTraceMemoryRequestStruct) (*SystemTraceMemoryResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemTraceMemory not implemented")
}
func (*UnimplementedSenderServer) SystemCpuProfile(context.Context, *SystemCpuProfileRequestStruct) (*SystemCpuProfileResponseStruct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemCpuProfile not implemented")
}

func RegisterSenderServer(s *grpc.Server, srv SenderServer) {
	s.RegisterService(&_Sender_serviceDesc, srv)
}

func _Sender_SenderSetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderSetTokenRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderSetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderSetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderSetToken(ctx, req.(*SenderSetTokenRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderSendEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderSendEventRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderSendEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderSendEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderSendEvent(ctx, req.(*SenderSendEventRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderSendEventToAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderSendEventToAllRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderSendEventToAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderSendEventToAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderSendEventToAll(ctx, req.(*SenderSendEventToAllRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderGetOnlineConnectionsByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderGetOnlineConnectionsByUserIdRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderGetOnlineConnectionsByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderGetOnlineConnectionsByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderGetOnlineConnectionsByUserId(ctx, req.(*SenderGetOnlineConnectionsByUserIdRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderCloseConnectionsByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderCloseConnectionsByUserIdRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderCloseConnectionsByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderCloseConnectionsByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderCloseConnectionsByUserId(ctx, req.(*SenderCloseConnectionsByUserIdRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderAddTaskPushNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderAddTaskPushNotificationRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderAddTaskPushNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderAddTaskPushNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderAddTaskPushNotification(ctx, req.(*SenderAddTaskPushNotificationRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderGetOnlineUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderGetOnlineUsersRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderGetOnlineUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderGetOnlineUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderGetOnlineUsers(ctx, req.(*SenderGetOnlineUsersRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderAddUsersToThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderAddUsersToThreadRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderAddUsersToThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderAddUsersToThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderAddUsersToThread(ctx, req.(*SenderAddUsersToThreadRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderSendTypingEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderSendTypingEventRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderSendTypingEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderSendTypingEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderSendTypingEvent(ctx, req.(*SenderSendTypingEventRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderSendThreadTypingEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderSendThreadTypingEventRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderSendThreadTypingEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderSendThreadTypingEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderSendThreadTypingEvent(ctx, req.(*SenderSendThreadTypingEventRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderSendVoIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderSendVoIPRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderSendVoIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderSendVoIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderSendVoIP(ctx, req.(*SenderSendVoIPRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SenderSendIncomingCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenderSendIncomingCallRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SenderSendIncomingCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SenderSendIncomingCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SenderSendIncomingCall(ctx, req.(*SenderSendIncomingCallRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SystemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemStatusRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SystemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SystemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SystemStatus(ctx, req.(*SystemStatusRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SystemTraceGoroutine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceGoroutineRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SystemTraceGoroutine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SystemTraceGoroutine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SystemTraceGoroutine(ctx, req.(*SystemTraceGoroutineRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SystemTraceMemory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemTraceMemoryRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SystemTraceMemory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SystemTraceMemory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SystemTraceMemory(ctx, req.(*SystemTraceMemoryRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SystemCpuProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemCpuProfileRequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SystemCpuProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pivotSenderGrpc.sender/SystemCpuProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SystemCpuProfile(ctx, req.(*SystemCpuProfileRequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pivotSenderGrpc.sender",
	HandlerType: (*SenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SenderSetToken",
			Handler:    _Sender_SenderSetToken_Handler,
		},
		{
			MethodName: "SenderSendEvent",
			Handler:    _Sender_SenderSendEvent_Handler,
		},
		{
			MethodName: "SenderSendEventToAll",
			Handler:    _Sender_SenderSendEventToAll_Handler,
		},
		{
			MethodName: "SenderGetOnlineConnectionsByUserId",
			Handler:    _Sender_SenderGetOnlineConnectionsByUserId_Handler,
		},
		{
			MethodName: "SenderCloseConnectionsByUserId",
			Handler:    _Sender_SenderCloseConnectionsByUserId_Handler,
		},
		{
			MethodName: "SenderAddTaskPushNotification",
			Handler:    _Sender_SenderAddTaskPushNotification_Handler,
		},
		{
			MethodName: "SenderGetOnlineUsers",
			Handler:    _Sender_SenderGetOnlineUsers_Handler,
		},
		{
			MethodName: "SenderAddUsersToThread",
			Handler:    _Sender_SenderAddUsersToThread_Handler,
		},
		{
			MethodName: "SenderSendTypingEvent",
			Handler:    _Sender_SenderSendTypingEvent_Handler,
		},
		{
			MethodName: "SenderSendThreadTypingEvent",
			Handler:    _Sender_SenderSendThreadTypingEvent_Handler,
		},
		{
			MethodName: "SenderSendVoIP",
			Handler:    _Sender_SenderSendVoIP_Handler,
		},
		{
			MethodName: "SenderSendIncomingCall",
			Handler:    _Sender_SenderSendIncomingCall_Handler,
		},
		{
			MethodName: "SystemStatus",
			Handler:    _Sender_SystemStatus_Handler,
		},
		{
			MethodName: "SystemTraceGoroutine",
			Handler:    _Sender_SystemTraceGoroutine_Handler,
		},
		{
			MethodName: "SystemTraceMemory",
			Handler:    _Sender_SystemTraceMemory_Handler,
		},
		{
			MethodName: "SystemCpuProfile",
			Handler:    _Sender_SystemCpuProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/go_pivot_sender.proto",
}
